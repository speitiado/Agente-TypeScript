{"version":3,"file":"types.d.cts","names":["Maybe","T","PromiseMaybe","Promise","AssistantConfig","AssistantCreate","Record","AssistantRead","AssistantUpdate","AssistantDelete","AssistantSearch","ThreadCreate","ThreadRead","ThreadUpdate","ThreadDelete","ThreadSearch","CronCreate","CronRead","CronUpdate","CronDelete","CronSearch","StorePut","StoreGet","StoreSearch","StoreListNamespaces","StoreDelete","RunsCreate","EventValueMap","ResourceType","ActionType","BaseAuthReturn","BaseUser","ToUserLike","Omit","CallbackParameter","Event","Resource","Action","Value","TUser","ContextMap","EventType","ActionCallbackParameter","AuthCallbackParameter","ResourceCallbackParameter","Filters","TKey","AuthenticateCallback","Request","OnKey","OnSingleParameter","OnParameter","AnyCallback","CallbackEvent","OnCallback","TMetadata"],"sources":["../../src/auth/types.d.ts"],"sourcesContent":["type Maybe<T> = T | null | undefined;\ntype PromiseMaybe<T> = Promise<T> | T;\ninterface AssistantConfig {\n    tags?: Maybe<string[]>;\n    recursion_limit?: Maybe<number>;\n    configurable?: Maybe<{\n        thread_id?: Maybe<string>;\n        thread_ts?: Maybe<string>;\n        [key: string]: unknown;\n    }>;\n}\n/**\n * @inline\n */\ninterface AssistantCreate {\n    assistant_id?: Maybe<string>;\n    metadata?: Maybe<Record<string, unknown>>;\n    config?: Maybe<AssistantConfig>;\n    context?: Maybe<unknown>;\n    if_exists?: Maybe<\"raise\" | \"do_nothing\">;\n    name?: Maybe<string>;\n    description?: Maybe<string>;\n    graph_id: string;\n}\n/**\n * @inline\n */\ninterface AssistantRead {\n    assistant_id: string;\n    metadata?: Maybe<Record<string, unknown>>;\n}\n/**\n * @inline\n */\ninterface AssistantUpdate {\n    assistant_id: string;\n    metadata?: Maybe<Record<string, unknown>>;\n    config?: Maybe<AssistantConfig>;\n    context?: Maybe<unknown>;\n    graph_id?: Maybe<string>;\n    name?: Maybe<string>;\n    description?: Maybe<string>;\n    version?: Maybe<number>;\n}\n/**\n * @inline\n */\ninterface AssistantDelete {\n    assistant_id: string;\n}\n/**\n * @inline\n */\ninterface AssistantSearch {\n    graph_id?: Maybe<string>;\n    metadata?: Maybe<Record<string, unknown>>;\n    limit?: Maybe<number>;\n    offset?: Maybe<number>;\n}\n/**\n * @inline\n */\ninterface ThreadCreate {\n    thread_id?: Maybe<string>;\n    metadata?: Maybe<Record<string, unknown>>;\n    if_exists?: Maybe<\"raise\" | \"do_nothing\">;\n}\n/**\n * @inline\n */\ninterface ThreadRead {\n    thread_id?: Maybe<string>;\n}\n/**\n * @inline\n */\ninterface ThreadUpdate {\n    thread_id?: Maybe<string>;\n    metadata?: Maybe<Record<string, unknown>>;\n    action?: Maybe<\"interrupt\" | \"rollback\">;\n}\n/**\n * @inline\n */\ninterface ThreadDelete {\n    thread_id?: Maybe<string>;\n    run_id?: Maybe<string>;\n}\n/**\n * @inline\n */\ninterface ThreadSearch {\n    thread_id?: Maybe<string>;\n    ids?: Maybe<string[]>;\n    status?: Maybe<\"idle\" | \"busy\" | \"interrupted\" | \"error\" | (string & {})>; // eslint-disable-line @typescript-eslint/ban-types\n    metadata?: Maybe<Record<string, unknown>>;\n    values?: Maybe<Record<string, unknown>>;\n    limit?: Maybe<number>;\n    offset?: Maybe<number>;\n}\n/**\n * @inline\n */\ninterface CronCreate {\n    payload?: Maybe<Record<string, unknown>>;\n    schedule: string;\n    cron_id?: Maybe<string>;\n    thread_id?: Maybe<string>;\n    user_id?: Maybe<string>;\n    end_time?: Maybe<string>;\n}\n/**\n * @inline\n */\ninterface CronRead {\n    cron_id: string;\n}\n/**\n * @inline\n */\ninterface CronUpdate {\n    cron_id: string;\n    payload?: Maybe<Record<string, unknown>>;\n    schedule?: Maybe<string>;\n}\n/**\n * @inline\n */\ninterface CronDelete {\n    cron_id: string;\n}\n/**\n * @inline\n */\ninterface CronSearch {\n    assistant_id?: Maybe<string>;\n    thread_id?: Maybe<string>;\n    limit?: Maybe<number>;\n    offset?: Maybe<number>;\n}\n/**\n * @inline\n */\ninterface StorePut {\n    namespace: string[];\n    key: string;\n    value: Record<string, unknown>;\n}\n/**\n * @inline\n */\ninterface StoreGet {\n    namespace: Maybe<string[]>;\n    key: string;\n}\n/**\n * @inline\n */\ninterface StoreSearch {\n    namespace?: Maybe<string[]>;\n    filter?: Maybe<Record<string, unknown>>;\n    limit?: Maybe<number>;\n    offset?: Maybe<number>;\n    query?: Maybe<string>;\n}\n/**\n * @inline\n */\ninterface StoreListNamespaces {\n    namespace?: Maybe<string[]>;\n    suffix?: Maybe<string[]>;\n    max_depth?: Maybe<number>;\n    limit?: Maybe<number>;\n    offset?: Maybe<number>;\n}\n/**\n * @inline\n */\ninterface StoreDelete {\n    namespace?: Maybe<string[]>;\n    key: string;\n}\n/**\n * @inline\n */\ninterface RunsCreate {\n    thread_id?: Maybe<string>;\n    assistant_id: string;\n    run_id: string;\n    status: Maybe<\"pending\" | \"running\" | \"error\" | \"success\" | \"timeout\" | \"interrupted\">;\n    metadata?: Maybe<Record<string, unknown>>;\n    prevent_insert_if_inflight?: Maybe<boolean>;\n    multitask_strategy?: Maybe<\"interrupt\" | \"rollback\" | \"reject\" | \"enqueue\">;\n    if_not_exists?: Maybe<\"reject\" | \"create\">;\n    after_seconds?: Maybe<number>;\n    kwargs: Record<string, unknown>;\n}\nexport interface EventValueMap {\n    [\"threads:create\"]: ThreadCreate;\n    [\"threads:read\"]: ThreadRead;\n    [\"threads:update\"]: ThreadUpdate;\n    [\"threads:delete\"]: ThreadDelete;\n    [\"threads:search\"]: ThreadSearch;\n    [\"threads:create_run\"]: RunsCreate;\n    [\"assistants:create\"]: AssistantCreate;\n    [\"assistants:read\"]: AssistantRead;\n    [\"assistants:update\"]: AssistantUpdate;\n    [\"assistants:delete\"]: AssistantDelete;\n    [\"assistants:search\"]: AssistantSearch;\n    [\"crons:create\"]: CronCreate;\n    [\"crons:read\"]: CronRead;\n    [\"crons:update\"]: CronUpdate;\n    [\"crons:delete\"]: CronDelete;\n    [\"crons:search\"]: CronSearch;\n    [\"store:put\"]: StorePut;\n    [\"store:get\"]: StoreGet;\n    [\"store:search\"]: StoreSearch;\n    [\"store:list_namespaces\"]: StoreListNamespaces;\n    [\"store:delete\"]: StoreDelete;\n}\ninterface ResourceType {\n    threads: \"threads:create\" | \"threads:read\" | \"threads:update\" | \"threads:delete\" | \"threads:search\" | \"threads:create_run\";\n    assistants: \"assistants:create\" | \"assistants:read\" | \"assistants:update\" | \"assistants:delete\" | \"assistants:search\";\n    crons: \"crons:create\" | \"crons:read\" | \"crons:update\" | \"crons:delete\" | \"crons:search\";\n    store: \"store:put\" | \"store:get\" | \"store:search\" | \"store:list_namespaces\" | \"store:delete\";\n}\ninterface ActionType {\n    \"*:create\": \"threads:create\" | \"assistants:create\" | \"crons:create\";\n    \"*:read\": \"threads:read\" | \"assistants:read\" | \"crons:read\";\n    \"*:update\": \"threads:update\" | \"assistants:update\" | \"crons:update\";\n    \"*:delete\": \"threads:delete\" | \"assistants:delete\" | \"crons:delete\" | \"store:delete\";\n    \"*:search\": \"threads:search\" | \"assistants:search\" | \"crons:search\" | \"store:search\";\n    \"*:create_run\": \"threads:create_run\";\n    \"*:put\": \"store:put\";\n    \"*:get\": \"store:get\";\n    \"*:list_namespaces\": \"store:list_namespaces\";\n}\nexport type BaseAuthReturn = {\n    is_authenticated?: boolean;\n    display_name?: string;\n    identity: string;\n    permissions: string[];\n} | string;\nexport interface BaseUser {\n    is_authenticated: boolean;\n    display_name: string;\n    identity: string;\n    permissions: string[];\n}\nexport type ToUserLike<T extends BaseAuthReturn> = T extends string ? {\n    is_authenticated: boolean;\n    display_name: string;\n    identity: string;\n    permissions: string[];\n} : Omit<T, \"is_authenticated\" | \"display_name\"> & {\n    is_authenticated: boolean;\n    display_name: string;\n};\ntype CallbackParameter<Event extends string = string, Resource extends string = string, Action extends string = string, Value = unknown, TUser extends BaseUser = BaseUser> = {\n    event: Event;\n    resource: Resource;\n    action: Action;\n    value: Value;\n    user: TUser;\n    permissions: string[];\n};\ntype ContextMap = {\n    [EventType in keyof EventValueMap]: CallbackParameter<EventType, EventType extends `${infer Resource}:${string}` ? Resource : never, EventType extends `${string}:${infer Action}` ? Action : never, EventValueMap[EventType], BaseUser>;\n};\ntype ActionCallbackParameter<T extends keyof ActionType, TUser extends BaseUser = BaseUser> = ContextMap[ActionType[T]] & {\n    user: TUser;\n};\ntype AuthCallbackParameter<T extends keyof EventValueMap, TUser extends BaseUser = BaseUser> = ContextMap[T] & {\n    user: TUser;\n};\ntype ResourceCallbackParameter<T extends keyof ResourceType, TUser extends BaseUser = BaseUser> = ContextMap[ResourceType[T]] & {\n    user: TUser;\n};\nexport type Filters<TKey extends string | number | symbol> = {\n    [key in TKey]: string | {\n        [op in \"$contains\" | \"$eq\"]?: string;\n    };\n};\nexport interface AuthenticateCallback<T extends BaseAuthReturn> {\n    (request: Request): PromiseMaybe<T>;\n}\ntype OnKey = keyof ResourceType | keyof ActionType | keyof EventValueMap;\ntype OnSingleParameter<T extends OnKey, TUser extends BaseUser = BaseUser> = T extends keyof ResourceType ? ResourceCallbackParameter<T, TUser> : T extends keyof ActionType ? ActionCallbackParameter<T, TUser> : T extends keyof EventValueMap ? AuthCallbackParameter<T, TUser> : never;\ntype OnParameter<T extends \"*\" | OnKey | OnKey[], TUser extends BaseUser = BaseUser> = T extends OnKey[] ? OnSingleParameter<T[number], TUser> : T extends \"*\" ? AuthCallbackParameter<keyof EventValueMap, TUser> : T extends OnKey ? OnSingleParameter<T, TUser> : never;\nexport type AnyCallback = {\n    (request: CallbackParameter): void | PromiseMaybe<boolean> | PromiseMaybe<Filters<string>>;\n};\nexport type CallbackEvent = \"*\" | OnKey | OnKey[];\nexport type OnCallback<T extends CallbackEvent, TUser extends BaseUser = BaseUser, TMetadata extends Record<string, unknown> = Record<string, unknown>> = {\n    (request: OnParameter<T, TUser>): void | PromiseMaybe<boolean> | PromiseMaybe<Filters<keyof TMetadata>>;\n};\nexport {};\n"],"mappings":"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"}