{"version":3,"file":"config.d.cts","names":["RunnableConfig","BaseStore","LangGraphRunnableConfig","ensureLangGraphConfig","getStore","getWriter","getConfig","getCurrentTaskInput","T","recastCheckpointNamespace","getParentCheckpointNamespace"],"sources":["../../../src/pregel/utils/config.d.ts"],"sourcesContent":["import { RunnableConfig } from \"@langchain/core/runnables\";\nimport { BaseStore } from \"@langchain/langgraph-checkpoint\";\nimport { LangGraphRunnableConfig } from \"../runnable_types.js\";\nexport declare function ensureLangGraphConfig(...configs: (LangGraphRunnableConfig | undefined)[]): RunnableConfig;\n/**\n * A helper utility function that returns the {@link BaseStore} that was set when the graph was initialized\n *\n * @returns a reference to the {@link BaseStore} that was set when the graph was initialized\n */\nexport declare function getStore(config?: LangGraphRunnableConfig): BaseStore | undefined;\n/**\n * A helper utility function that returns the {@link LangGraphRunnableConfig#writer} if \"custom\" stream mode is enabled, otherwise undefined.\n *\n * @returns a reference to the {@link LangGraphRunnableConfig#writer} if \"custom\" stream mode is enabled, otherwise undefined\n */\nexport declare function getWriter(config?: LangGraphRunnableConfig): ((chunk: unknown) => void) | undefined;\n/**\n * A helper utility function that returns the {@link LangGraphRunnableConfig} that was set when the graph was initialized.\n *\n * Note: This only works when running in an environment that supports node:async_hooks and AsyncLocalStorage. If you're running this in a\n * web environment, access the LangGraphRunnableConfig from the node function directly.\n *\n * @returns the {@link LangGraphRunnableConfig} that was set when the graph was initialized\n */\nexport declare function getConfig(): LangGraphRunnableConfig;\n/**\n * A helper utility function that returns the input for the currently executing task\n *\n * @returns the input for the currently executing task\n */\nexport declare function getCurrentTaskInput<T = unknown>(config?: LangGraphRunnableConfig): T;\nexport declare function recastCheckpointNamespace(namespace: string): string;\nexport declare function getParentCheckpointNamespace(namespace: string): string;\n"],"mappings":";;;;;;;AASA;;;;iBAAwBI,QAAAA,UAAkBF,0BAA0BD;AAMpE;AASA;AAMA;;;AAA4FO,iBAfpEH,SAAAA,CAeoEG,MAAAA,CAAAA,EAfjDN,uBAeiDM,CAAAA,EAAAA,CAAAA,CAAAA,KAAAA,EAAAA,OAAAA,EAAAA,GAAAA,IAAAA,CAAAA,GAAAA,SAAAA;;;;;;;;;iBANpEF,SAAAA,CAAAA,GAAaJ;;;;;;iBAMbK,0CAA0CL,0BAA0BM"}