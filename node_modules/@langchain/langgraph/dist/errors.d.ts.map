{"version":3,"file":"errors.d.ts","names":["Command","Interrupt","BaseLangGraphErrorFields","BaseLangGraphError","Error","GraphBubbleUp","GraphRecursionError","GraphValueError","GraphInterrupt","NodeInterrupt","ParentCommand","isParentCommand","isGraphBubbleUp","isGraphInterrupt","EmptyInputError","EmptyChannelError","InvalidUpdateError","MultipleSubgraphsError","UnreachableNodeError","RemoteException","getSubgraphsSeenSet"],"sources":["../src/errors.d.ts"],"sourcesContent":["import { Command, Interrupt } from \"./constants.js\";\n// When editing, make sure to update the index found here:\n// https://langchain-ai.github.io/langgraphjs/troubleshooting/errors/\nexport type BaseLangGraphErrorFields = {\n    lc_error_code?: \"GRAPH_RECURSION_LIMIT\" | \"INVALID_CONCURRENT_GRAPH_UPDATE\" | \"INVALID_GRAPH_NODE_RETURN_VALUE\" | \"MISSING_CHECKPOINTER\" | \"MULTIPLE_SUBGRAPHS\" | \"UNREACHABLE_NODE\";\n};\n// TODO: Merge with base LangChain error class when we drop support for core@0.2.0\n/** @category Errors */\nexport declare class BaseLangGraphError extends Error {\n    lc_error_code?: string;\n    constructor(message?: string, fields?: BaseLangGraphErrorFields);\n}\nexport declare class GraphBubbleUp extends BaseLangGraphError {\n    get is_bubble_up(): boolean;\n}\nexport declare class GraphRecursionError extends BaseLangGraphError {\n    constructor(message?: string, fields?: BaseLangGraphErrorFields);\n    static get unminifiable_name(): string;\n}\nexport declare class GraphValueError extends BaseLangGraphError {\n    constructor(message?: string, fields?: BaseLangGraphErrorFields);\n    static get unminifiable_name(): string;\n}\nexport declare class GraphInterrupt extends GraphBubbleUp {\n    interrupts: Interrupt[];\n    constructor(interrupts?: Interrupt[], fields?: BaseLangGraphErrorFields);\n    static get unminifiable_name(): string;\n}\n/** Raised by a node to interrupt execution. */\nexport declare class NodeInterrupt extends GraphInterrupt {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(message: any, fields?: BaseLangGraphErrorFields);\n    static get unminifiable_name(): string;\n}\nexport declare class ParentCommand extends GraphBubbleUp {\n    command: Command;\n    constructor(command: Command);\n    static get unminifiable_name(): string;\n}\nexport declare function isParentCommand(e?: unknown): e is ParentCommand;\nexport declare function isGraphBubbleUp(e?: unknown): e is GraphBubbleUp;\nexport declare function isGraphInterrupt(e?: unknown): e is GraphInterrupt;\nexport declare class EmptyInputError extends BaseLangGraphError {\n    constructor(message?: string, fields?: BaseLangGraphErrorFields);\n    static get unminifiable_name(): string;\n}\nexport declare class EmptyChannelError extends BaseLangGraphError {\n    constructor(message?: string, fields?: BaseLangGraphErrorFields);\n    static get unminifiable_name(): string;\n}\nexport declare class InvalidUpdateError extends BaseLangGraphError {\n    constructor(message?: string, fields?: BaseLangGraphErrorFields);\n    static get unminifiable_name(): string;\n}\n/**\n * @deprecated This exception type is no longer thrown.\n */\nexport declare class MultipleSubgraphsError extends BaseLangGraphError {\n    constructor(message?: string, fields?: BaseLangGraphErrorFields);\n    static get unminifiable_name(): string;\n}\nexport declare class UnreachableNodeError extends BaseLangGraphError {\n    constructor(message?: string, fields?: BaseLangGraphErrorFields);\n    static get unminifiable_name(): string;\n}\n/**\n * Exception raised when an error occurs in the remote graph.\n */\nexport declare class RemoteException extends BaseLangGraphError {\n    constructor(message?: string, fields?: BaseLangGraphErrorFields);\n    static get unminifiable_name(): string;\n}\n/**\n * Used for subgraph detection.\n */\nexport declare const getSubgraphsSeenSet: () => any;\n"],"mappings":";;;;;AAGYE,KAAAA,wBAAAA,GAAwB;EAKfC,aAAAA,CAAAA,EAAAA,uBAAkB,GAAA,iCAAA,GAAA,iCAAA,GAAA,sBAAA,GAAA,oBAAA,GAAA,kBAAA;CAAA;;;cAAlBA,kBAAAA,SAA2BC,KAAAA;EAI3BC,aAAAA,CAAAA,EAAa,MAAA;EAGbC,WAAAA,CAAAA,OAAmB,CAAnBA,EAAmB,MAAA,EAAA,MAAA,CAAA,EALGJ,wBAKH;;AACGA,cAJtBG,aAAAA,SAAsBF,kBAAAA,CAIAD;MADMC,YAAAA,CAAAA,CAAAA,EAAAA,OAAAA;;AAI5BI,cAJAD,mBAAAA,SAA4BH,kBAAAA,CAIb;EAAA,WAAA,CAAA,OAAA,CAAA,EAAA,MAAA,EAAA,MAAA,CAAA,EAHOD,wBAGP;aACOA,iBAAAA,CAAAA,CAAAA,EAAAA,MAAAA;;cADtBK,eAAAA,SAAwBJ,kBAAAA;EAIxBK,WAAAA,CAAAA,OAAc,CAAA,EAAA,MAAA,EAAA,MAAA,CAAA,EAHQN,wBAGR;EAAA,WAAA,iBAAA,CAAA,CAAA,EAAA,MAAA;;AAEND,cAFRO,cAAAA,SAAuBH,aAAAA,CAEfJ;YAAsBC,EADnCD,SACmCC,EAAAA;aAFPG,CAAAA,UAAAA,CAAAA,EAEfJ,SAFeI,EAAAA,EAAAA,MAAAA,CAAAA,EAEOH,wBAFPG;;AAM5C;;AAEuCH,cAFlBO,aAAAA,SAAsBD,cAAAA,CAEJN;;qCAAAA;EAGlBQ,WAAAA,iBAAa,CAAA,CAAA,EAAA,MAAA;;AACrBV,cADQU,aAAAA,SAAsBL,aAAAA,CAC9BL;SACYA,EADZA,OACYA;aAFkBK,CAAAA,OAAAA,EAElBL,OAFkBK;;AAK3C;AACwBO,iBADAD,eAAAA,CACmCN,CAAAA,CAAAA,EAAAA,OAAAA,CAAAA,EAAAA,CAAAA,IADAK,aACAL;AACnCQ,iBADAD,eAAAA,CACoCJ,CAAAA,CAAAA,EAAAA,OAAAA,CAAAA,EAAAA,CAAAA,IADDH,aACCG;AACvCM,iBADGD,gBAAAA,CACY,CAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,IADwBL,cACxB;AAAA,cAAfM,eAAAA,SAAwBX,kBAAAA,CAAT;aACOD,CAAAA,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,MAAAA,CAAAA,EAAAA,wBAAAA;aADEC,iBAAAA,CAAAA,CAAAA,EAAAA,MAAAA;;AAIxBY,cAAAA,iBAAAA,SAA0BZ,kBAAAA,CAAT;EAAA,WAAA,CAAA,OAAA,CAAA,EAAA,MAAA,EAAA,MAAA,CAAA,EACKD,wBADL;aACKA,iBAAAA,CAAAA,CAAAA,EAAAA,MAAAA;;cAGtBc,kBAAAA,SAA2Bb,kBAAAA;EAA3Ba,WAAAA,CAAAA,OAAkB,CAAlBA,EAAkB,MAAA,EAAA,MAAA,CAAA,EACId,wBADJ;EAAA,WAAA,iBAAA,CAAA,CAAA,EAAA,MAAA;;;;AAOvC;AAA2C,cAAtBe,sBAAAA,SAA+Bd,kBAAAA,CAAT;aACAD,CAAAA,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,MAAAA,CAAAA,EAAAA,wBAAAA;aADSC,iBAAAA,CAAAA,CAAAA,EAAAA,MAAAA;;AAI/Be,cAAAA,oBAAAA,SAA6Bf,kBAAAA,CAAT;EAAA,WAAA,CAAA,OAAA,CAAA,EAAA,MAAA,EAAA,MAAA,CAAA,EACED,wBADF;aACEA,iBAAAA,CAAAA,CAAAA,EAAAA,MAAAA;;;AAM3C;;AAC2CA,cADtBiB,eAAAA,SAAwBhB,kBAAAA,CACFD;aADEC,CAAAA,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,MAAAA,CAAAA,EACFD,wBADEC;;AAO7C;;;;cAAqBiB"}