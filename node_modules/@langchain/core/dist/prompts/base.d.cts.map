{"version":3,"file":"base.d.cts","names":["InputValues","PartialValues","StringWithAutocomplete","BasePromptValueInterface","BaseOutputParser","SerializedFields","Runnable","BaseCallbackConfig","TypedPromptInputValues","RunInput","Extract","Example","Record","BasePromptTemplateInput","InputVariables","Array","PartialVariableName","BasePromptTemplate","RunOutput","Promise"],"sources":["../../src/prompts/base.d.ts"],"sourcesContent":["// Default generic \"any\" values are for backwards compatibility.\n// Replace with \"string\" when we are comfortable with a breaking change.\nimport type { InputValues, PartialValues, StringWithAutocomplete } from \"../utils/types/index.js\";\nimport { type BasePromptValueInterface } from \"../prompt_values.js\";\nimport { BaseOutputParser } from \"../output_parsers/index.js\";\nimport type { SerializedFields } from \"../load/map_keys.js\";\nimport { Runnable } from \"../runnables/base.js\";\nimport { BaseCallbackConfig } from \"../callbacks/manager.js\";\nexport type TypedPromptInputValues<RunInput> = InputValues<StringWithAutocomplete<Extract<keyof RunInput, string>>>;\nexport type Example = Record<string, string>;\n/**\n * Input common to all prompt templates.\n */\nexport interface BasePromptTemplateInput<\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nInputVariables extends InputValues = any, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPartialVariableName extends string = any> {\n    /**\n     * A list of variable names the prompt template expects\n     */\n    inputVariables: Array<Extract<keyof InputVariables, string>>;\n    /**\n     * How to parse the output of calling an LLM on this formatted prompt\n     */\n    outputParser?: BaseOutputParser;\n    /** Partial variables */\n    partialVariables?: PartialValues<PartialVariableName>;\n}\n/**\n * Base class for prompt templates. Exposes a format method that returns a\n * string prompt given a set of input values.\n */\nexport declare abstract class BasePromptTemplate<\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nRunInput extends InputValues = any, RunOutput extends BasePromptValueInterface = BasePromptValueInterface, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPartialVariableName extends string = any> extends Runnable<RunInput, RunOutput> implements BasePromptTemplateInput {\n    PromptValueReturnType: RunOutput;\n    lc_serializable: boolean;\n    lc_namespace: string[];\n    get lc_attributes(): SerializedFields | undefined;\n    inputVariables: Array<Extract<keyof RunInput, string>>;\n    outputParser?: BaseOutputParser;\n    partialVariables: PartialValues<PartialVariableName>;\n    /**\n     * Metadata to be used for tracing.\n     */\n    metadata?: Record<string, unknown>;\n    /** Tags to be used for tracing. */\n    tags?: string[];\n    constructor(input: BasePromptTemplateInput);\n    abstract partial(values: PartialValues): Promise<BasePromptTemplate<RunInput, RunOutput, PartialVariableName>>;\n    /**\n     * Merges partial variables and user variables.\n     * @param userVariables The user variables to merge with the partial variables.\n     * @returns A Promise that resolves to an object containing the merged variables.\n     */\n    mergePartialAndUserVariables(userVariables: TypedPromptInputValues<RunInput>): Promise<InputValues<Extract<keyof RunInput, string> | PartialVariableName>>;\n    /**\n     * Invokes the prompt template with the given input and options.\n     * @param input The input to invoke the prompt template with.\n     * @param options Optional configuration for the callback.\n     * @returns A Promise that resolves to the output of the prompt template.\n     */\n    invoke(input: RunInput, options?: BaseCallbackConfig): Promise<RunOutput>;\n    /**\n     * Format the prompt given the input values.\n     *\n     * @param values - A dictionary of arguments to be passed to the prompt template.\n     * @returns A formatted prompt string.\n     *\n     * @example\n     * ```ts\n     * prompt.format({ foo: \"bar\" });\n     * ```\n     */\n    abstract format(values: TypedPromptInputValues<RunInput>): Promise<string>;\n    /**\n     * Format the prompt given the input values and return a formatted prompt value.\n     * @param values\n     * @returns A formatted PromptValue.\n     */\n    abstract formatPromptValue(values: TypedPromptInputValues<RunInput>): Promise<RunOutput>;\n    /**\n     * Return the string type key uniquely identifying this class of prompt template.\n     */\n    abstract _getPromptType(): string;\n}\n"],"mappings":";;;;;;;;AAQYQ,KAAAA,sBAAsB,CAAA,QAAA,CAAA,GAAaR,WAAb,CAAyBE,sBAAzB,CAAgDQ,OAAhD,CAAA,MAA8DD,QAA9D,EAAA,MAAA,CAAA,CAAA,CAAA;AAAA,KACtBE,OAAAA,GAAUC,MADY,CAAA,MAAA,EAAA,MAAA,CAAA;;;;AAAaZ,UAK9Ba,uBAL8Bb;AAAW;AAC1D,uBAMuBA,WANK,GAAA,GAAA;AAI5B;4BAAwC,MAAA,GAAA,GAAA,CAAA,CAAA;EAAA;;;EAQP,cAAbe,EAAAA,KAAAA,CAAML,OAANK,CAAAA,MAAoBD,cAApBC,EAAAA,MAAAA,CAAAA,CAAAA;EAAK;;;EAMW,YAAA,CAAA,EAFjBX,gBAEiB;EAMNa;EAAkB,gBAAA,CAAA,EANzBhB,aAMyB,CANXe,mBAMW,CAAA;;;;;;AAKrBE,uBALGD,kBAKHC;;iBAHVlB,WAOuBS,GAAAA,GAAAA,EAAAA,kBAPcN,wBAOdM,GAPyCN,wBAOzCM;;4BAApBM,MAAAA,GAAAA,GAAAA,CAAAA,SAL8BT,QAK9BS,CALuCN,QAKvCM,EALiDG,SAKjDH,CAAAA,YALuEF,uBAKvEE,CAAAA;EAAK,qBACNX,EALQc,SAKRd;EAAgB,eACCY,EAAAA,OAAAA;EAAmB,YAAjCf,EAAAA,MAAAA,EAAAA;EAAa,IAIpBW,aAAAA,CAAAA,CAAAA,EAPUP,gBAOVO,GAAAA,SAAAA;EAAM,cAGEC,EATHE,KASGF,CATGH,OASHG,CAAAA,MATiBJ,QASjBI,EAAAA,MAAAA,CAAAA,CAAAA;EAAuB,YACjBZ,CAAAA,EATVG,gBASUH;EAAa,gBAA8BQ,EARlDR,aAQkDQ,CARpCO,mBAQoCP,CAAAA;EAAQ;;;EAAT,QAA1BU,CAAAA,EAJ9BP,MAI8BO,CAAAA,MAAAA,EAAAA,OAAAA,CAAAA;EAAO;EAM2B,IAA/BX,CAAAA,EAAAA,MAAAA,EAAAA;EAAsB,WAA+CC,CAAAA,KAAAA,EAP9FI,uBAO8FJ;EAAQ,SAAtBC,OAAAA,CAAAA,MAAAA,EAN1ET,aAM0ES,CAAAA,EAN1DS,OAM0DT,CANlDO,kBAMkDP,CAN/BD,QAM+BC,EANrBQ,SAMqBR,EANVM,mBAMUN,CAAAA,CAAAA;EAAO;;;;;EAOtD,4BAAWQ,CAAAA,aAAAA,EAPnBV,sBAOmBU,CAPIT,QAOJS,CAAAA,CAAAA,EAPgBC,OAOhBD,CAPwBlB,WAOxBkB,CAPoCR,OAOpCQ,CAAAA,MAPkDT,QAOlDS,EAAAA,MAAAA,CAAAA,GAPsEF,mBAOtEE,CAAAA,CAAAA;EAAS;;;;;;EAkBf,MAAqBA,CAAAA,KAAAA,EAlBhET,QAkBgES,EAAAA,OAAAA,CAAAA,EAlB5CX,kBAkB4CW,CAAAA,EAlBvBC,OAkBuBD,CAlBfA,SAkBeA,CAAAA;EAAS;;;AA9CuB;;;;;;;;0BAwCtFV,uBAAuBC,YAAYU;;;;;;qCAMxBX,uBAAuBC,YAAYU,QAAQD"}