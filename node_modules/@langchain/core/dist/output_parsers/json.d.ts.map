{"version":3,"file":"json.d.ts","names":["BaseCumulativeTransformOutputParser","Operation","ChatGeneration","Generation","parseJsonMarkdown","parsePartialJson","JsonOutputParser","Record","T","Promise"],"sources":["../../src/output_parsers/json.d.ts"],"sourcesContent":["import { BaseCumulativeTransformOutputParser } from \"./transform.js\";\nimport { Operation } from \"../utils/json_patch.js\";\nimport { ChatGeneration, Generation } from \"../outputs.js\";\nimport { parseJsonMarkdown, parsePartialJson } from \"../utils/json.js\";\n/**\n * Class for parsing the output of an LLM into a JSON object.\n */\nexport declare class JsonOutputParser<\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nT extends Record<string, any> = Record<string, any>> extends BaseCumulativeTransformOutputParser<T> {\n    static lc_name(): string;\n    lc_namespace: string[];\n    lc_serializable: boolean;\n    /** @internal */\n    _concatOutputChunks<T>(first: T, second: T): T;\n    protected _diff(prev: unknown | undefined, next: unknown): Operation[] | undefined;\n    // This should actually return Partial<T>, but there's no way\n    // to specify emitted chunks as instances separate from the main output type.\n    parsePartialResult(generations: ChatGeneration[] | Generation[]): Promise<T | undefined>;\n    parse(text: string): Promise<T>;\n    getFormatInstructions(): string;\n}\nexport { parsePartialJson, parseJsonMarkdown };\n"],"mappings":";;;;;;;;;AAOA;AAAqC,cAAhBM,gBAAgB;;UAE3BC,MAAsBA,CAAAA,MAAAA,EAAAA,GAAAA,CAAAA,GAAAA,MAAAA,CAAAA,MAAAA,EAAAA,GAAAA,CAAAA,CAAAA,SAA6BP,mCAA7BO,CAAiEC,CAAjED,CAAAA,CAAAA;EAAM,OAA2DC,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAC,YAKhEA,EAAAA,MAAAA,EAAAA;EAAC,eAAUA,EAAAA,OAAAA;EAAC;EAAI,mBACaP,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,EAD7BO,CAC6BP,EAAAA,MAAAA,EADlBO,CACkBP,CAAAA,EADdO,CACcP;EAAS,UAGpCC,KAAAA,CAAAA,IAAAA,EAAAA,OAAAA,GAAAA,SAAAA,EAAAA,IAAAA,EAAAA,OAAAA,CAAAA,EAH2BD,SAG3BC,EAAAA,GAAAA,SAAAA;EAAc;EAAe;EAAc,kBAATO,CAAAA,WAAAA,EAAlCP,cAAkCO,EAAAA,GAAfN,UAAeM,EAAAA,CAAAA,EAAAA,OAAAA,CAAQD,CAARC,GAAAA,SAAAA,CAAAA;EAAO,KAC5CD,CAAAA,IAAAA,EAAAA,MAAAA,CAAAA,EAARC,OAAQD,CAAAA,CAAAA,CAAAA;EAAC,qBAATC,CAAAA,CAAAA,EAAAA,MAAAA"}