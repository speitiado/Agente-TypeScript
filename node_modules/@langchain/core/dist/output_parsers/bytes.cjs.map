{"version":3,"file":"bytes.cjs","names":["BaseTransformOutputParser","text: string"],"sources":["../../src/output_parsers/bytes.ts"],"sourcesContent":["import { BaseTransformOutputParser } from \"./transform.js\";\n\n/**\n * OutputParser that parses LLMResult into the top likely string and\n * encodes it into bytes.\n */\nexport class BytesOutputParser extends BaseTransformOutputParser<Uint8Array> {\n  static lc_name() {\n    return \"BytesOutputParser\";\n  }\n\n  lc_namespace = [\"langchain_core\", \"output_parsers\", \"bytes\"];\n\n  lc_serializable = true;\n\n  protected textEncoder: InstanceType<typeof TextEncoder> = new TextEncoder();\n\n  parse(text: string): Promise<Uint8Array> {\n    return Promise.resolve(this.textEncoder.encode(text));\n  }\n\n  getFormatInstructions(): string {\n    return \"\";\n  }\n}\n"],"mappings":";;;;;;;AAMA,IAAa,oBAAb,cAAuCA,4CAAsC;CAC3E,OAAO,UAAU;AACf,SAAO;CACR;CAED,eAAe;EAAC;EAAkB;EAAkB;CAAQ;CAE5D,kBAAkB;CAElB,AAAU,cAAgD,IAAI;CAE9D,MAAMC,MAAmC;AACvC,SAAO,QAAQ,QAAQ,KAAK,YAAY,OAAO,KAAK,CAAC;CACtD;CAED,wBAAgC;AAC9B,SAAO;CACR;AACF"}