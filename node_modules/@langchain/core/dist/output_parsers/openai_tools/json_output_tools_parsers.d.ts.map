{"version":3,"file":"json_output_tools_parsers.d.ts","names":["z3","z4","ChatGeneration","ChatGenerationChunk","InvalidToolCall","ToolCall","BaseCumulativeTransformOutputParser","BaseCumulativeTransformOutputParserInput","InteropZodType","ParsedToolCall","Record","JsonOutputToolsParserParams","parseToolCall","convertLangChainToolCallToOpenAI","makeInvalidToolCall","JsonOutputToolsParser","T","Promise","JsonOutputKeyToolsParserParamsBase","JsonOutputKeyToolsParserParamsV3","ZodType","JsonOutputKeyToolsParserParamsV4","$ZodType","JsonOutputKeyToolsParserParamsInterop","JsonOutputKeyToolsParserParams","JsonOutputKeyToolsParser"],"sources":["../../../src/output_parsers/openai_tools/json_output_tools_parsers.d.ts"],"sourcesContent":["import type * as z3 from \"zod/v3\";\nimport type * as z4 from \"zod/v4/core\";\nimport { ChatGeneration, ChatGenerationChunk } from \"../../outputs.js\";\nimport { InvalidToolCall, ToolCall } from \"../../messages/tool.js\";\nimport { BaseCumulativeTransformOutputParser, BaseCumulativeTransformOutputParserInput } from \"../transform.js\";\nimport { type InteropZodType } from \"../../utils/types/zod.js\";\nexport type ParsedToolCall = {\n    id?: string;\n    type: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    args: Record<string, any>;\n};\nexport type JsonOutputToolsParserParams = {\n    /** Whether to return the tool call id. */\n    returnId?: boolean;\n} & BaseCumulativeTransformOutputParserInput;\nexport declare function parseToolCall(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCall: Record<string, any>, options: {\n    returnId?: boolean;\n    partial: true;\n}): ToolCall | undefined;\nexport declare function parseToolCall(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCall: Record<string, any>, options?: {\n    returnId?: boolean;\n    partial?: false;\n}): ToolCall;\nexport declare function parseToolCall(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCall: Record<string, any>, options?: {\n    returnId?: boolean;\n    partial?: boolean;\n}): ToolCall | undefined;\nexport declare function convertLangChainToolCallToOpenAI(toolCall: ToolCall): {\n    id: string;\n    type: string;\n    function: {\n        name: string;\n        arguments: string;\n    };\n};\nexport declare function makeInvalidToolCall(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCall: Record<string, any>, errorMsg?: string): InvalidToolCall;\n/**\n * Class for parsing the output of a tool-calling LLM into a JSON object.\n */\nexport declare class JsonOutputToolsParser<T> extends BaseCumulativeTransformOutputParser<T> {\n    static lc_name(): string;\n    returnId: boolean;\n    lc_namespace: string[];\n    lc_serializable: boolean;\n    constructor(fields?: JsonOutputToolsParserParams);\n    protected _diff(): void;\n    parse(): Promise<T>;\n    parseResult(generations: ChatGeneration[]): Promise<T>;\n    /**\n     * Parses the output and returns a JSON object. If `argsOnly` is true,\n     * only the arguments of the function call are returned.\n     * @param generations The output of the LLM to parse.\n     * @returns A JSON object representation of the function call or its arguments.\n     */\n    parsePartialResult(generations: ChatGenerationChunk[] | ChatGeneration[], partial?: boolean\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): Promise<any>;\n}\ntype JsonOutputKeyToolsParserParamsBase = {\n    keyName: string;\n    returnSingle?: boolean;\n} & JsonOutputToolsParserParams;\ntype JsonOutputKeyToolsParserParamsV3<\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nT extends Record<string, any> = Record<string, any>> = {\n    zodSchema?: z3.ZodType<T>;\n} & JsonOutputKeyToolsParserParamsBase;\ntype JsonOutputKeyToolsParserParamsV4<\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nT extends Record<string, any> = Record<string, any>> = {\n    zodSchema?: z4.$ZodType<T, T>;\n} & JsonOutputKeyToolsParserParamsBase;\nexport type JsonOutputKeyToolsParserParamsInterop<\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nT extends Record<string, any> = Record<string, any>> = {\n    zodSchema?: InteropZodType<T>;\n} & JsonOutputKeyToolsParserParamsBase;\n// Use Zod 3 for backwards compatibility\nexport type JsonOutputKeyToolsParserParams<\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nT extends Record<string, any> = Record<string, any>> = JsonOutputKeyToolsParserParamsV3<T>;\n/**\n * Class for parsing the output of a tool-calling LLM into a JSON object if you are\n * expecting only a single tool to be called.\n */\nexport declare class JsonOutputKeyToolsParser<\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nT extends Record<string, any> = Record<string, any>> extends JsonOutputToolsParser<T> {\n    static lc_name(): string;\n    lc_namespace: string[];\n    lc_serializable: boolean;\n    returnId: boolean;\n    /** The type of tool calls to return. */\n    keyName: string;\n    /** Whether to return only the first tool call. */\n    returnSingle: boolean;\n    zodSchema?: InteropZodType<T>;\n    constructor(params: JsonOutputKeyToolsParserParamsV3<T>);\n    constructor(params: JsonOutputKeyToolsParserParamsV4<T>);\n    constructor(params: JsonOutputKeyToolsParserParamsInterop<T>);\n    protected _validateResult(result: unknown): Promise<T>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parsePartialResult(generations: ChatGeneration[]): Promise<any>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parseResult(generations: ChatGeneration[]): Promise<any>;\n}\nexport {};\n"],"mappings":"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"}