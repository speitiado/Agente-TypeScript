{"version":3,"file":"type-utils.d.ts","names":["Optional","T","K","Omit","Pick","Partial"],"sources":["../../src/types/type-utils.d.ts"],"sourcesContent":["// Utility for marking only some keys of an interface as optional\n// Compare to Partial<T> which marks all keys as optional\nexport type Optional<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n"],"mappings":";;AAEA;AAAoB,KAARA,QAAQ,CAAA,CAAA,EAAA,UAAA,MAAoBC,CAApB,CAAA,GAAyBE,IAAzB,CAA8BF,CAA9B,EAAiCC,CAAjC,CAAA,GAAsCG,OAAtC,CAA8CD,IAA9C,CAAmDH,CAAnD,EAAsDC,CAAtD,CAAA,CAAA"}