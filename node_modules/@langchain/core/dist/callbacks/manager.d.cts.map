{"version":3,"file":"manager.d.cts","names":["AgentAction","AgentFinish","ChainValues","LLMResult","BaseCallbackHandler","CallbackHandlerMethods","HandleLLMNewTokenCallbackFields","NewTokenIndices","BaseMessage","Serialized","DocumentInterface","BaseCallbackManagerMethods","Required","K","Parameters","Promise","CallbackManagerOptions","Callbacks","CallbackManager","BaseCallbackConfig","Record","parseCallbackConfigArg","BaseCallbackManager","BaseRunManager","CallbackManagerForRetrieverRun","Error","CallbackManagerForLLMRun","CallbackManagerForChainRun","CallbackManagerForToolRun","ensureHandler"],"sources":["../../src/callbacks/manager.d.ts"],"sourcesContent":["import { AgentAction, AgentFinish } from \"../agents.js\";\nimport type { ChainValues } from \"../utils/types/index.js\";\nimport { LLMResult } from \"../outputs.js\";\nimport { BaseCallbackHandler, CallbackHandlerMethods, HandleLLMNewTokenCallbackFields, NewTokenIndices } from \"./base.js\";\nimport { type BaseMessage } from \"../messages/base.js\";\nimport { Serialized } from \"../load/serializable.js\";\nimport type { DocumentInterface } from \"../documents/document.js\";\ntype BaseCallbackManagerMethods = {\n    [K in keyof CallbackHandlerMethods]?: (...args: Parameters<Required<CallbackHandlerMethods>[K]>) => Promise<unknown>;\n};\nexport interface CallbackManagerOptions {\n    verbose?: boolean;\n    tracing?: boolean;\n}\nexport type Callbacks = CallbackManager | (BaseCallbackHandler | CallbackHandlerMethods)[];\nexport interface BaseCallbackConfig {\n    /**\n     * Name for the tracer run for this call. Defaults to the name of the class.\n     */\n    runName?: string;\n    /**\n     * Tags for this call and any sub-calls (eg. a Chain calling an LLM).\n     * You can use these to filter calls.\n     */\n    tags?: string[];\n    /**\n     * Metadata for this call and any sub-calls (eg. a Chain calling an LLM).\n     * Keys should be strings, values should be JSON-serializable.\n     */\n    metadata?: Record<string, unknown>;\n    /**\n     * Callbacks for this call and any sub-calls (eg. a Chain calling an LLM).\n     * Tags are passed to all callbacks, metadata is passed to handle*Start callbacks.\n     */\n    callbacks?: Callbacks;\n    /**\n     * Unique identifier for the tracer run for this call. If not provided, a new UUID\n     * will be generated.\n     */\n    runId?: string;\n}\nexport declare function parseCallbackConfigArg(arg: Callbacks | BaseCallbackConfig | undefined): BaseCallbackConfig;\n/**\n * Manage callbacks from different components of LangChain.\n */\nexport declare abstract class BaseCallbackManager {\n    abstract addHandler(handler: BaseCallbackHandler): void;\n    abstract removeHandler(handler: BaseCallbackHandler): void;\n    abstract setHandlers(handlers: BaseCallbackHandler[]): void;\n    setHandler(handler: BaseCallbackHandler): void;\n}\n/**\n * Base class for run manager in LangChain.\n */\nexport declare class BaseRunManager {\n    readonly runId: string;\n    readonly handlers: BaseCallbackHandler[];\n    protected readonly inheritableHandlers: BaseCallbackHandler[];\n    protected readonly tags: string[];\n    protected readonly inheritableTags: string[];\n    protected readonly metadata: Record<string, unknown>;\n    protected readonly inheritableMetadata: Record<string, unknown>;\n    protected readonly _parentRunId?: string | undefined;\n    constructor(runId: string, handlers: BaseCallbackHandler[], inheritableHandlers: BaseCallbackHandler[], tags: string[], inheritableTags: string[], metadata: Record<string, unknown>, inheritableMetadata: Record<string, unknown>, _parentRunId?: string | undefined);\n    get parentRunId(): string | undefined;\n    handleText(text: string): Promise<void>;\n    handleCustomEvent(eventName: string, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: any, _runId?: string, _tags?: string[], \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata?: Record<string, any>): Promise<void>;\n}\n/**\n * Manages callbacks for retriever runs.\n */\nexport declare class CallbackManagerForRetrieverRun extends BaseRunManager implements BaseCallbackManagerMethods {\n    getChild(tag?: string): CallbackManager;\n    handleRetrieverEnd(documents: DocumentInterface[]): Promise<void>;\n    handleRetrieverError(err: Error | unknown): Promise<void>;\n}\nexport declare class CallbackManagerForLLMRun extends BaseRunManager implements BaseCallbackManagerMethods {\n    handleLLMNewToken(token: string, idx?: NewTokenIndices, _runId?: string, _parentRunId?: string, _tags?: string[], fields?: HandleLLMNewTokenCallbackFields): Promise<void>;\n    handleLLMError(err: Error | unknown, _runId?: string, _parentRunId?: string, _tags?: string[], extraParams?: Record<string, unknown>): Promise<void>;\n    handleLLMEnd(output: LLMResult, _runId?: string, _parentRunId?: string, _tags?: string[], extraParams?: Record<string, unknown>): Promise<void>;\n}\nexport declare class CallbackManagerForChainRun extends BaseRunManager implements BaseCallbackManagerMethods {\n    getChild(tag?: string): CallbackManager;\n    handleChainError(err: Error | unknown, _runId?: string, _parentRunId?: string, _tags?: string[], kwargs?: {\n        inputs?: Record<string, unknown>;\n    }): Promise<void>;\n    handleChainEnd(output: ChainValues, _runId?: string, _parentRunId?: string, _tags?: string[], kwargs?: {\n        inputs?: Record<string, unknown>;\n    }): Promise<void>;\n    handleAgentAction(action: AgentAction): Promise<void>;\n    handleAgentEnd(action: AgentFinish): Promise<void>;\n}\nexport declare class CallbackManagerForToolRun extends BaseRunManager implements BaseCallbackManagerMethods {\n    getChild(tag?: string): CallbackManager;\n    handleToolError(err: Error | unknown): Promise<void>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    handleToolEnd(output: any): Promise<void>;\n}\n/**\n * @example\n * ```typescript\n * const prompt = PromptTemplate.fromTemplate(\"What is the answer to {question}?\");\n *\n * // Example of using LLMChain with OpenAI and a simple prompt\n * const chain = new LLMChain({\n *   llm: new ChatOpenAI({ model: \"gpt-4o-mini\", temperature: 0.9 }),\n *   prompt,\n * });\n *\n * // Running the chain with a single question\n * const result = await chain.call({\n *   question: \"What is the airspeed velocity of an unladen swallow?\",\n * });\n * console.log(\"The answer is:\", result);\n * ```\n */\nexport declare class CallbackManager extends BaseCallbackManager implements BaseCallbackManagerMethods {\n    handlers: BaseCallbackHandler[];\n    inheritableHandlers: BaseCallbackHandler[];\n    tags: string[];\n    inheritableTags: string[];\n    metadata: Record<string, unknown>;\n    inheritableMetadata: Record<string, unknown>;\n    name: string;\n    _parentRunId?: string;\n    constructor(parentRunId?: string, options?: {\n        handlers?: BaseCallbackHandler[];\n        inheritableHandlers?: BaseCallbackHandler[];\n        tags?: string[];\n        inheritableTags?: string[];\n        metadata?: Record<string, unknown>;\n        inheritableMetadata?: Record<string, unknown>;\n    });\n    /**\n     * Gets the parent run ID, if any.\n     *\n     * @returns The parent run ID.\n     */\n    getParentRunId(): string | undefined;\n    handleLLMStart(llm: Serialized, prompts: string[], runId?: string | undefined, _parentRunId?: string | undefined, extraParams?: Record<string, unknown> | undefined, _tags?: string[] | undefined, _metadata?: Record<string, unknown> | undefined, runName?: string | undefined): Promise<CallbackManagerForLLMRun[]>;\n    handleChatModelStart(llm: Serialized, messages: BaseMessage[][], runId?: string | undefined, _parentRunId?: string | undefined, extraParams?: Record<string, unknown> | undefined, _tags?: string[] | undefined, _metadata?: Record<string, unknown> | undefined, runName?: string | undefined): Promise<CallbackManagerForLLMRun[]>;\n    handleChainStart(chain: Serialized, inputs: ChainValues, runId?: string, runType?: string | undefined, _tags?: string[] | undefined, _metadata?: Record<string, unknown> | undefined, runName?: string | undefined): Promise<CallbackManagerForChainRun>;\n    handleToolStart(tool: Serialized, input: string, runId?: string, _parentRunId?: string | undefined, _tags?: string[] | undefined, _metadata?: Record<string, unknown> | undefined, runName?: string | undefined): Promise<CallbackManagerForToolRun>;\n    handleRetrieverStart(retriever: Serialized, query: string, runId?: string, _parentRunId?: string | undefined, _tags?: string[] | undefined, _metadata?: Record<string, unknown> | undefined, runName?: string | undefined): Promise<CallbackManagerForRetrieverRun>;\n    handleCustomEvent?(eventName: string, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: any, runId: string, _tags?: string[], \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata?: Record<string, any>): Promise<any>;\n    addHandler(handler: BaseCallbackHandler, inherit?: boolean): void;\n    removeHandler(handler: BaseCallbackHandler): void;\n    setHandlers(handlers: BaseCallbackHandler[], inherit?: boolean): void;\n    addTags(tags: string[], inherit?: boolean): void;\n    removeTags(tags: string[]): void;\n    addMetadata(metadata: Record<string, unknown>, inherit?: boolean): void;\n    removeMetadata(metadata: Record<string, unknown>): void;\n    copy(additionalHandlers?: BaseCallbackHandler[], inherit?: boolean): CallbackManager;\n    static fromHandlers(handlers: CallbackHandlerMethods): CallbackManager;\n    static configure(inheritableHandlers?: Callbacks, localHandlers?: Callbacks, inheritableTags?: string[], localTags?: string[], inheritableMetadata?: Record<string, unknown>, localMetadata?: Record<string, unknown>, options?: CallbackManagerOptions): CallbackManager | undefined;\n    // TODO: Deprecate async method in favor of this one.\n    static _configureSync(inheritableHandlers?: Callbacks, localHandlers?: Callbacks, inheritableTags?: string[], localTags?: string[], inheritableMetadata?: Record<string, unknown>, localMetadata?: Record<string, unknown>, options?: CallbackManagerOptions): CallbackManager | undefined;\n}\nexport declare function ensureHandler(handler: BaseCallbackHandler | CallbackHandlerMethods): BaseCallbackHandler;\nexport {};\n"],"mappings":"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"}