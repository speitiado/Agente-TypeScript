{"version":3,"file":"router.d.cts","names":["Runnable","RunnableBatchOptions","IterableReadableStream","RunnableConfig","RouterInput","RouterRunnable","RunInput","RunOutput","RunnableInput","Record","Partial","Promise","Error"],"sources":["../../src/runnables/router.d.ts"],"sourcesContent":["import { Runnable, type RunnableBatchOptions } from \"./base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\nimport { type RunnableConfig } from \"./config.js\";\nexport type RouterInput = {\n    key: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    input: any;\n};\n/**\n * A runnable that routes to a set of runnables based on Input['key'].\n * Returns the output of the selected runnable.\n * @example\n * ```typescript\n * import { RouterRunnable, RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const router = new RouterRunnable({\n *   runnables: {\n *     toUpperCase: RunnableLambda.from((text: string) => text.toUpperCase()),\n *     reverseText: RunnableLambda.from((text: string) =>\n *       text.split(\"\").reverse().join(\"\")\n *     ),\n *   },\n * });\n *\n * // Invoke the 'reverseText' runnable\n * const result1 = router.invoke({ key: \"reverseText\", input: \"Hello World\" });\n *\n * // \"dlroW olleH\"\n *\n * // Invoke the 'toUpperCase' runnable\n * const result2 = router.invoke({ key: \"toUpperCase\", input: \"Hello World\" });\n *\n * // \"HELLO WORLD\"\n * ```\n */\nexport declare class RouterRunnable<RunInput extends RouterInput, RunnableInput, RunOutput> extends Runnable<RunInput, RunOutput> {\n    static lc_name(): string;\n    lc_namespace: string[];\n    lc_serializable: boolean;\n    runnables: Record<string, Runnable<RunnableInput, RunOutput>>;\n    constructor(fields: {\n        runnables: Record<string, Runnable<RunnableInput, RunOutput>>;\n    });\n    invoke(input: RunInput, options?: Partial<RunnableConfig>): Promise<RunOutput>;\n    batch(inputs: RunInput[], options?: Partial<RunnableConfig> | Partial<RunnableConfig>[], batchOptions?: RunnableBatchOptions & {\n        returnExceptions?: false;\n    }): Promise<RunOutput[]>;\n    batch(inputs: RunInput[], options?: Partial<RunnableConfig> | Partial<RunnableConfig>[], batchOptions?: RunnableBatchOptions & {\n        returnExceptions: true;\n    }): Promise<(RunOutput | Error)[]>;\n    batch(inputs: RunInput[], options?: Partial<RunnableConfig> | Partial<RunnableConfig>[], batchOptions?: RunnableBatchOptions): Promise<(RunOutput | Error)[]>;\n    stream(input: RunInput, options?: Partial<RunnableConfig>): Promise<IterableReadableStream<RunOutput>>;\n}\n"],"mappings":";;;;;KAGYI,WAAAA;;EAAAA;EAgCSC,KAAAA,EAAAA,GAAAA;CAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYuCF,cAZrDE,cAYqDF,CAAAA,iBAZrBC,WAYqBD,EAAAA,aAAAA,EAAAA,SAAAA,CAAAA,SAZ0BH,QAY1BG,CAZmCG,QAYnCH,EAZ6CI,SAY7CJ,CAAAA,CAAAA;EAAc,OAAtBO,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAO,YAAmCT,EAAAA,MAAAA,EAAAA;EAAoB,eAE/GM,EAAAA,OAAAA;EAAS,SAAGK,EAVdH,MAUcG,CAAAA,MAAAA,EAVCZ,QAUDY,CAVUJ,aAUVI,EAVyBL,SAUzBK,CAAAA,CAAAA;EAAK,WAA1BD,CAAAA,MAAAA,EAAAA;IACUL,SAAAA,EATCG,MASDH,CAAAA,MAAAA,EATgBN,QAShBM,CATyBE,aASzBF,EATwCC,SASxCD,CAAAA,CAAAA;EAAQ,CAAA;EAAoC,MAAtBI,CAAAA,KAAAA,EAPtBJ,QAOsBI,EAAAA,OAAAA,CAAAA,EAPFA,OAOEA,CAPMP,cAONO,CAAAA,CAAAA,EAPwBC,OAOxBD,CAPgCH,SAOhCG,CAAAA;EAAO,KAA2BP,CAAAA,MAAAA,EANxDG,QAMwDH,EAAAA,EAAAA,OAAAA,CAAAA,EANlCO,OAMkCP,CAN1BA,cAM0BA,CAAAA,GANRO,OAMQP,CANAA,cAMAA,CAAAA,EAAAA,EAAAA,YAAD,CAACA,EANkCF,oBAMlCE,GAAAA;IAARO,gBAAAA,CAAAA,EAAAA,KAAAA;EAAO,CAAA,CAAA,EAJjEC,OAIoGV,CAJ5FM,SAI4FN,EAAAA,CAAAA;EAAoB,KAAYM,CAAAA,MAAAA,EAH1HD,QAG0HC,EAAAA,EAAAA,OAAAA,CAAAA,EAHpGG,OAGoGH,CAH5FJ,cAG4FI,CAAAA,GAH1EG,OAG0EH,CAHlEJ,cAGkEI,CAAAA,EAAAA,EAAAA,YAAiB,CAAjBA,EAHhCN,oBAGgCM,GAAAA;IAAYK,gBAAAA,EAAAA,IAAAA;EAAK,CAAA,CAAA,EADrJD,OAC2HA,CAAAA,CADlHJ,SACkHI,GADtGC,KACsGD,CAAAA,EAAAA,CAAAA;EAAO,KACxHL,CAAAA,MAAAA,EADAA,QACAA,EAAAA,EAAAA,OAAAA,CAAAA,EADsBI,OACtBJ,CAD8BH,cAC9BG,CAAAA,GADgDI,OAChDJ,CADwDH,cACxDG,CAAAA,EAAAA,EAAAA,YAAAA,CAAAA,EAD0FL,oBAC1FK,CAAAA,EADiHK,OACjHL,CAAAA,CAD0HC,SAC1HD,GADsIM,KACtIN,CAAAA,EAAAA,CAAAA;EAAQ,MAAoBH,CAAAA,KAAAA,EAA5BG,QAA4BH,EAAAA,OAAAA,CAAAA,EAARO,OAAQP,CAAAA,cAAAA,CAAAA,CAAAA,EAAkBQ,OAAlBR,CAA0BD,sBAA1BC,CAAiDI,SAAjDJ,CAAAA,CAAAA"}