{"version":3,"file":"types.d.cts","names":["SerializableInterface","BaseCallbackConfig","IterableReadableStreamInterface","InteropZodType","RunnableBatchOptions","RunnableIOSchema","RunnableInterface","RunnableConfig","RunInput","CallOptions","Partial","RunOutput","Promise","Error","AsyncGenerator","Edge","Node","Record","ConfigurableFieldType","AbortSignal"],"sources":["../../src/runnables/types.d.ts"],"sourcesContent":["import type { SerializableInterface } from \"../load/serializable.js\";\nimport type { BaseCallbackConfig } from \"../callbacks/manager.js\";\nimport type { IterableReadableStreamInterface } from \"../types/_internal.js\";\nimport { InteropZodType } from \"../utils/types/zod.js\";\nexport type RunnableBatchOptions = {\n    /** @deprecated Pass in via the standard runnable config object instead */\n    maxConcurrency?: number;\n    returnExceptions?: boolean;\n};\nexport type RunnableIOSchema = {\n    name?: string;\n    schema: InteropZodType;\n};\n/**\n * Base interface implemented by all runnables.\n * Used for cross-compatibility between different versions of LangChain core.\n *\n * Should not change on patch releases.\n */\nexport interface RunnableInterface<\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nRunInput = any, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nRunOutput = any, CallOptions extends RunnableConfig = RunnableConfig> extends SerializableInterface {\n    lc_serializable: boolean;\n    invoke(input: RunInput, options?: Partial<CallOptions>): Promise<RunOutput>;\n    batch(inputs: RunInput[], options?: Partial<CallOptions> | Partial<CallOptions>[], batchOptions?: RunnableBatchOptions & {\n        returnExceptions?: false;\n    }): Promise<RunOutput[]>;\n    batch(inputs: RunInput[], options?: Partial<CallOptions> | Partial<CallOptions>[], batchOptions?: RunnableBatchOptions & {\n        returnExceptions: true;\n    }): Promise<(RunOutput | Error)[]>;\n    batch(inputs: RunInput[], options?: Partial<CallOptions> | Partial<CallOptions>[], batchOptions?: RunnableBatchOptions): Promise<(RunOutput | Error)[]>;\n    stream(input: RunInput, options?: Partial<CallOptions>): Promise<IterableReadableStreamInterface<RunOutput>>;\n    transform(generator: AsyncGenerator<RunInput>, options: Partial<CallOptions>): AsyncGenerator<RunOutput>;\n    getName(suffix?: string): string;\n}\nexport interface Edge {\n    source: string;\n    target: string;\n    data?: string;\n    conditional?: boolean;\n}\nexport interface Node {\n    id: string;\n    name: string;\n    data: RunnableIOSchema | RunnableInterface;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata?: Record<string, any>;\n}\nexport interface RunnableConfig<\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nConfigurableFieldType extends Record<string, any> = Record<string, any>> extends BaseCallbackConfig {\n    /**\n     * Runtime values for attributes previously made configurable on this Runnable,\n     * or sub-Runnables.\n     */\n    configurable?: ConfigurableFieldType;\n    /**\n     * Maximum number of times a call can recurse. If not provided, defaults to 25.\n     */\n    recursionLimit?: number;\n    /** Maximum number of parallel calls to make. */\n    maxConcurrency?: number;\n    /**\n     * Timeout for this call in milliseconds.\n     */\n    timeout?: number;\n    /**\n     * Abort signal for this call.\n     * If provided, the call will be aborted when the signal is aborted.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal\n     */\n    signal?: AbortSignal;\n}\n"],"mappings":"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"}