{"version":3,"file":"tracer_langchain.d.cts","names":["LangSmithTracingClientInterface","RunTree","RunTreeConfig","BaseRun","RunCreate","RunUpdate","BaseRunUpdate","KVMap","BaseTracer","BaseCallbackHandlerInput","Run","RunCreate2","LangChainTracerFields","LangChainTracer","Promise"],"sources":["../../src/tracers/tracer_langchain.d.ts"],"sourcesContent":["import { type LangSmithTracingClientInterface } from \"langsmith\";\nimport { RunTree, type RunTreeConfig } from \"langsmith/run_trees\";\nimport { BaseRun, RunCreate, RunUpdate as BaseRunUpdate, KVMap } from \"langsmith/schemas\";\nimport { BaseTracer } from \"./base.js\";\nimport { BaseCallbackHandlerInput } from \"../callbacks/base.js\";\nexport interface Run extends BaseRun {\n    id: string;\n    child_runs: this[];\n    child_execution_order: number;\n    dotted_order?: string;\n    trace_id?: string;\n}\nexport interface RunCreate2 extends RunCreate {\n    trace_id?: string;\n    dotted_order?: string;\n}\nexport interface RunUpdate extends BaseRunUpdate {\n    events: BaseRun[\"events\"];\n    inputs: KVMap;\n    trace_id?: string;\n    dotted_order?: string;\n}\nexport interface LangChainTracerFields extends BaseCallbackHandlerInput {\n    exampleId?: string;\n    projectName?: string;\n    client?: LangSmithTracingClientInterface;\n    replicas?: RunTreeConfig[\"replicas\"];\n}\nexport declare class LangChainTracer extends BaseTracer implements LangChainTracerFields {\n    name: string;\n    projectName?: string;\n    exampleId?: string;\n    client: LangSmithTracingClientInterface;\n    replicas?: RunTreeConfig[\"replicas\"];\n    usesRunTreeMap: boolean;\n    constructor(fields?: LangChainTracerFields);\n    protected persistRun(_run: Run): Promise<void>;\n    onRunCreate(run: Run): Promise<void>;\n    onRunUpdate(run: Run): Promise<void>;\n    getRun(id: string): Run | undefined;\n    updateFromRunTree(runTree: RunTree): void;\n    getRunTreeWithTracingConfig(id: string): RunTree | undefined;\n    static getTraceableRunTree(): RunTree | undefined;\n}\n"],"mappings":";;;;;;;UAKiBU,GAAAA,SAAYP;;EAAZO,UAAG,EAAA,IAAA,EAASP;EAOZQ,qBAAU,EAAA,MAASP;EAInBC,YAAS,CAAA,EAAA,MAAA;EAAA,QAAA,CAAA,EAAA,MAAA;;AAEdE,UANKI,UAAAA,SAAmBP,SAMxBG,CAAAA;EAAK,QAFkBD,CAAAA,EAAAA,MAAAA;EAAa,YAAA,CAAA,EAAA,MAAA;AAMhD;AAAsC,UANrBD,SAAAA,SAAkBC,WAMG,CAAA;EAAA,MAGzBN,EARDG,OAQCH,CAAAA,QAAAA,CAAAA;EAA+B,MAC7BE,EARHK,KAQGL;EAAa,QAJmBO,CAAAA,EAAAA,MAAAA;EAAwB,YAAA,CAAA,EAAA,MAAA;AAMvE;AAAoC,UANnBG,qBAAAA,SAA8BH,wBAMX,CAAA;EAAA,SAIxBT,CAAAA,EAAAA,MAAAA;EAA+B,WAC5BE,CAAAA,EAAAA,MAAAA;EAAa,MAEHU,CAAAA,EAVZZ,+BAUYY;EAAqB,QACfF,CAAAA,EAVhBR,aAUgBQ,CAAAA,UAAAA,CAAAA;;AACVA,cATAG,eAAAA,SAAwBL,UAAAA,YAAsBI,qBAS9CF,CAAAA;EAAG,IAAGI,EAAAA,MAAAA;EAAO,WACbJ,CAAAA,EAAAA,MAAAA;EAAG,SAAGI,CAAAA,EAAAA,MAAAA;EAAO,MACVJ,EAPZV,+BAOYU;EAAG,QACIT,CAAAA,EAPhBC,aAOgBD,CAAAA,UAAAA,CAAAA;EAAO,cACOA,EAAAA,OAAAA;EAAO,WAClBA,CAAAA,MAAAA,CAAAA,EAPTW,qBAOSX;EAAO,UAdIO,UAAAA,CAAAA,IAAAA,EAQdE,GARcF,CAAAA,EAQRM,OARQN,CAAAA,IAAAA,CAAAA;EAAU,WAAYI,CAAAA,GAAAA,EAS9CF,GAT8CE,CAAAA,EASxCE,OATwCF,CAAAA,IAAAA,CAAAA;EAAqB,WAAA,CAAA,GAAA,EAUnEF,GAVmE,CAAA,EAU7DI,OAV6D,CAAA,IAAA,CAAA;sBAWhEJ;6BACOT;2CACcA;gCACXA"}