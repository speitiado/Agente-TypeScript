{"version":3,"file":"run_collector.d.cts","names":["BaseRun","Run","BaseTracer","RunCollectorCallbackHandler","exampleId","Promise"],"sources":["../../src/tracers/run_collector.d.ts"],"sourcesContent":["import { BaseRun, Run } from \"langsmith/schemas\";\nimport { BaseTracer } from \"./base.js\";\n/**\n * A callback handler that collects traced runs and makes it easy to fetch the traced run object from calls through any langchain object.\n * For instance, it makes it easy to fetch the run ID and then do things with that, such as log feedback.\n */\nexport declare class RunCollectorCallbackHandler extends BaseTracer {\n    /** The name of the callback handler. */\n    name: string;\n    /** The ID of the example. */\n    exampleId?: string;\n    /** An array of traced runs. */\n    tracedRuns: Run[];\n    /**\n     * Creates a new instance of the RunCollectorCallbackHandler class.\n     * @param exampleId The ID of the example.\n     */\n    constructor({ exampleId }?: {\n        exampleId?: string;\n    });\n    /**\n     * Persists the given run object.\n     * @param run The run object to persist.\n     */\n    protected persistRun(run: BaseRun): Promise<void>;\n}\n"],"mappings":";;;;;;;AAMA;;AAMgBC,cANKE,2BAAAA,SAAoCD,UAAAA,CAMzCD;EAAG;EAKQ,IAOGD,EAAAA,MAAAA;EAAO;EAAU,SAlBUE,CAAAA,EAAAA,MAAAA;EAAU;cAMnDD;;;;;;;;;;;;;;4BAYcD,UAAUK"}