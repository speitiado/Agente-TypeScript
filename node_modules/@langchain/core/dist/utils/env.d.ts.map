{"version":3,"file":"env.d.ts","names":["isBrowser","isWebWorker","isJsDom","isDeno","isNode","getEnv","RuntimeEnvironment","getRuntimeEnvironment","getEnvironmentVariable"],"sources":["../../src/utils/env.d.ts"],"sourcesContent":["// Inlined from https://github.com/flexdinesh/browser-or-node\ndeclare global {\n    const Deno: {\n        version: {\n            deno: string;\n        };\n        env: {\n            get: (name: string) => string | undefined;\n        };\n    } | undefined;\n}\nexport declare const isBrowser: () => boolean;\nexport declare const isWebWorker: () => boolean;\nexport declare const isJsDom: () => boolean;\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport declare const isDeno: () => boolean;\n// Mark not-as-node if in Supabase Edge Function\nexport declare const isNode: () => boolean;\nexport declare const getEnv: () => string;\nexport type RuntimeEnvironment = {\n    library: string;\n    libraryVersion?: string;\n    runtime: string;\n    runtimeVersion?: string;\n};\nexport declare function getRuntimeEnvironment(): RuntimeEnvironment;\nexport declare function getEnvironmentVariable(name: string): string | undefined;\n"],"mappings":";;;EAWqBA,MAAAA,IAAAA,EAAwB;IACxBC,OAAAA,EAAAA;MACAC,IAAsB,EAAA,MAAA;IAGtBC,CAAAA;IAEAC,GAAAA,EAAqB;MACrBC,GAAoB,EAAA,CAAA,IAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,SAAA;IAC7BC,CAAAA;EAMYC,CAAAA,GAAAA,SAAAA;AACxB;cAhBqBP;cACAC;cACAC;;;cAGAC;;cAEAC;cACAC;KACTC,kBAAAA;;;;;;iBAMYC,qBAAAA,CAAAA,GAAyBD;iBACzBE,sBAAAA"}