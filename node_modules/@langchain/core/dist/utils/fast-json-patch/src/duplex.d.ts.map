{"version":3,"file":"duplex.d.ts","names":["Operation","Observer","T","unobserve","observe","Object","Array","generate","compare"],"sources":["../../../../src/utils/fast-json-patch/src/duplex.d.ts"],"sourcesContent":["import { Operation } from \"./core.js\";\nexport interface Observer<T> {\n    object: T;\n    patches: Operation[];\n    unobserve: () => void;\n    callback: (patches: Operation[]) => void;\n}\n/**\n * Detach an observer from an object\n */\nexport declare function unobserve<T>(root: T, observer: Observer<T>): void;\n/**\n * Observes changes made to an object, which can then be retrieved using generate\n */\nexport declare function observe<T>(obj: Object | Array<T>, callback?: (patches: Operation[]) => void): Observer<T>;\n/**\n * Generate an array of patches from an observer\n */\nexport declare function generate<T>(observer: Observer<Object>, invertible?: boolean): Operation[];\n/**\n * Create an array of patches from the differences in two objects\n */\nexport declare function compare(tree1: Object | Array<any>, tree2: Object | Array<any>, invertible?: boolean): Operation[];\n"],"mappings":";;;;;;;iBAsBwBQ,OAAAA,QAAeH,SAASC,mBAAmBD,SAASC,mCAAmCN"}