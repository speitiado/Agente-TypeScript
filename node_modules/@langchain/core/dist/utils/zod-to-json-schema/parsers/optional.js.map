{"version":3,"file":"optional.js","names":["def: ZodOptionalDef","refs: Refs"],"sources":["../../../../src/utils/zod-to-json-schema/parsers/optional.ts"],"sourcesContent":["import { ZodOptionalDef } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\nimport { parseAnyDef } from \"./any.js\";\n\nexport const parseOptionalDef = (\n  def: ZodOptionalDef,\n  refs: Refs\n): JsonSchema7Type | undefined => {\n  if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n    return parseDef(def.innerType._def, refs);\n  }\n\n  const innerSchema = parseDef(def.innerType._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n  });\n\n  return innerSchema\n    ? {\n        anyOf: [\n          {\n            not: parseAnyDef(refs),\n          },\n          innerSchema,\n        ],\n      }\n    : parseAnyDef(refs);\n};\n"],"mappings":";;;;AAMA,MAAa,mBAAmB,CAC9BA,KACAC,SACgC;AAChC,KAAI,KAAK,YAAY,UAAU,KAAK,KAAK,cAAc,UAAU,CAC/D,QAAO,SAAS,IAAI,UAAU,MAAM,KAAK;CAG3C,MAAM,cAAc,SAAS,IAAI,UAAU,MAAM;EAC/C,GAAG;EACH,aAAa;GAAC,GAAG,KAAK;GAAa;GAAS;EAAI;CACjD,EAAC;AAEF,QAAO,cACH,EACE,OAAO,CACL,EACE,KAAK,YAAY,KAAK,CACvB,GACD,WACD,EACF,IACD,YAAY,KAAK;AACtB"}