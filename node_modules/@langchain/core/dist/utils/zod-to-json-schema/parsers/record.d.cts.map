{"version":3,"file":"record.d.cts","names":["ZodMapDef","ZodRecordDef","ZodTypeAny","JsonSchema7Type","Refs","JsonSchema7EnumType","JsonSchema7StringType","JsonSchema7RecordPropertyNamesType","Omit","JsonSchema7RecordType","parseRecordDef"],"sources":["../../../../src/utils/zod-to-json-schema/parsers/record.d.ts"],"sourcesContent":["import { ZodMapDef, ZodRecordDef, ZodTypeAny } from \"zod/v3\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\nimport { JsonSchema7EnumType } from \"./enum.js\";\nimport { JsonSchema7StringType } from \"./string.js\";\ntype JsonSchema7RecordPropertyNamesType = Omit<JsonSchema7StringType, \"type\"> | Omit<JsonSchema7EnumType, \"type\">;\nexport type JsonSchema7RecordType = {\n    type: \"object\";\n    additionalProperties?: JsonSchema7Type | true;\n    propertyNames?: JsonSchema7RecordPropertyNamesType;\n};\nexport declare function parseRecordDef(def: ZodRecordDef<ZodTypeAny, ZodTypeAny> | ZodMapDef, refs: Refs): JsonSchema7RecordType;\nexport {};\n"],"mappings":";;;;;AAIoD,KAC/CO,kCAAAA,GAAqCC,IAAH,CAAQF,qBAAR,EAAA,MAAA,CAAA,GAAyCE,IAAzC,CAA8CH,mBAA9C,EAAA,MAAA,CAAA;AAAA,KAC3BI,qBAAAA,GAD2B;EAAA,IAAQH,EAAAA,QAAAA;EAAqB,oBAA1BE,CAAAA,EAGfL,eAHeK,GAAAA,IAAAA;EAAI,aAAuCH,CAAAA,EAIjEE,kCAJiEF;CAAmB"}