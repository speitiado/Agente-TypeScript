{"version":3,"file":"any.cjs","names":["refs: Refs","getRelativePath"],"sources":["../../../../src/utils/zod-to-json-schema/parsers/any.ts"],"sourcesContent":["import { Refs } from \"../Refs.js\";\nimport { getRelativePath } from \"../getRelativePath.js\";\n\nexport type JsonSchema7AnyType = { $ref?: string };\n\nexport function parseAnyDef(refs: Refs): JsonSchema7AnyType {\n  if (refs.target !== \"openAi\") {\n    return {};\n  }\n\n  const anyDefinitionPath = [\n    ...refs.basePath,\n    refs.definitionPath,\n    refs.openAiAnyTypeName,\n  ];\n\n  refs.flags.hasReferencedOpenAiAnyType = true;\n\n  return {\n    $ref:\n      refs.$refStrategy === \"relative\"\n        ? getRelativePath(anyDefinitionPath, refs.currentPath)\n        : anyDefinitionPath.join(\"/\"),\n  };\n}\n"],"mappings":";;;AAKA,SAAgB,YAAYA,MAAgC;AAC1D,KAAI,KAAK,WAAW,SAClB,QAAO,CAAE;CAGX,MAAM,oBAAoB;EACxB,GAAG,KAAK;EACR,KAAK;EACL,KAAK;CACN;CAED,KAAK,MAAM,6BAA6B;AAExC,QAAO,EACL,MACE,KAAK,iBAAiB,aAClBC,wCAAgB,mBAAmB,KAAK,YAAY,GACpD,kBAAkB,KAAK,IAAI,CAClC;AACF"}