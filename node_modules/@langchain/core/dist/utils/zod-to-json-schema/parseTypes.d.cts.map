{"version":3,"file":"parseTypes.d.cts","names":["JsonSchema7AnyType","JsonSchema7ArrayType","JsonSchema7BigintType","JsonSchema7BooleanType","JsonSchema7DateType","JsonSchema7EnumType","JsonSchema7AllOfType","JsonSchema7LiteralType","JsonSchema7MapType","JsonSchema7NativeEnumType","JsonSchema7NeverType","JsonSchema7NullType","JsonSchema7NullableType","JsonSchema7NumberType","JsonSchema7ObjectType","JsonSchema7RecordType","JsonSchema7SetType","JsonSchema7StringType","JsonSchema7TupleType","JsonSchema7UndefinedType","JsonSchema7UnionType","JsonSchema7UnknownType","JsonSchema7RefType","JsonSchema7Meta","JsonSchema7TypeUnion","JsonSchema7Type"],"sources":["../../../src/utils/zod-to-json-schema/parseTypes.d.ts"],"sourcesContent":["import { JsonSchema7AnyType } from \"./parsers/any.js\";\nimport { JsonSchema7ArrayType } from \"./parsers/array.js\";\nimport { JsonSchema7BigintType } from \"./parsers/bigint.js\";\nimport { JsonSchema7BooleanType } from \"./parsers/boolean.js\";\nimport { JsonSchema7DateType } from \"./parsers/date.js\";\nimport { JsonSchema7EnumType } from \"./parsers/enum.js\";\nimport { JsonSchema7AllOfType } from \"./parsers/intersection.js\";\nimport { JsonSchema7LiteralType } from \"./parsers/literal.js\";\nimport { JsonSchema7MapType } from \"./parsers/map.js\";\nimport { JsonSchema7NativeEnumType } from \"./parsers/nativeEnum.js\";\nimport { JsonSchema7NeverType } from \"./parsers/never.js\";\nimport { JsonSchema7NullType } from \"./parsers/null.js\";\nimport { JsonSchema7NullableType } from \"./parsers/nullable.js\";\nimport { JsonSchema7NumberType } from \"./parsers/number.js\";\nimport { JsonSchema7ObjectType } from \"./parsers/object.js\";\nimport { JsonSchema7RecordType } from \"./parsers/record.js\";\nimport { JsonSchema7SetType } from \"./parsers/set.js\";\nimport { JsonSchema7StringType } from \"./parsers/string.js\";\nimport { JsonSchema7TupleType } from \"./parsers/tuple.js\";\nimport { JsonSchema7UndefinedType } from \"./parsers/undefined.js\";\nimport { JsonSchema7UnionType } from \"./parsers/union.js\";\nimport { JsonSchema7UnknownType } from \"./parsers/unknown.js\";\ntype JsonSchema7RefType = {\n    $ref: string;\n};\ntype JsonSchema7Meta = {\n    title?: string;\n    default?: any;\n    description?: string;\n    markdownDescription?: string;\n};\nexport type JsonSchema7TypeUnion = JsonSchema7StringType | JsonSchema7ArrayType | JsonSchema7NumberType | JsonSchema7BigintType | JsonSchema7BooleanType | JsonSchema7DateType | JsonSchema7EnumType | JsonSchema7LiteralType | JsonSchema7NativeEnumType | JsonSchema7NullType | JsonSchema7NumberType | JsonSchema7ObjectType | JsonSchema7RecordType | JsonSchema7TupleType | JsonSchema7UnionType | JsonSchema7UndefinedType | JsonSchema7RefType | JsonSchema7NeverType | JsonSchema7MapType | JsonSchema7AnyType | JsonSchema7NullableType | JsonSchema7AllOfType | JsonSchema7UnknownType | JsonSchema7SetType;\nexport type JsonSchema7Type = JsonSchema7TypeUnion & JsonSchema7Meta;\nexport {};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;KAsBKsB,kBAAAA;;AADyD,CAAA;AACvC,KAGlBC,eAAAA,GAAe;EAMRC,KAAAA,CAAAA,EAAAA,MAAAA;EAAoB,OAAA,CAAA,EAAA,GAAA;EAAA,WAAGP,CAAAA,EAAAA,MAAAA;EAAqB,mBAAGhB,CAAAA,EAAAA,MAAAA;CAAoB;AAA2BC,KAA9FsB,oBAAAA,GAAuBP,qBAAuEf,GAA/CD,oBAA+CC,GAAxBW,qBAAwBX,GAAAA,qBAAAA,GAAwBC,sBAAxBD,GAAiDE,mBAAjDF,GAAuEG,mBAAvEH,GAA6FK,sBAA7FL,GAAsHO,yBAAtHP,GAAkJS,mBAAlJT,GAAwKW,qBAAxKX,GAAgMY,qBAAhMZ,GAAwNa,qBAAxNb,GAAgPgB,oBAAhPhB,GAAuQkB,oBAAvQlB,GAA8RiB,wBAA9RjB,GAAyToB,kBAAzTpB,GAA8UQ,oBAA9UR,GAAqWM,kBAArWN,GAA0XF,kBAA1XE,GAA+YU,uBAA/YV,GAAyaI,oBAAzaJ,GAAgcmB,sBAAhcnB,GAAydc,kBAAzdd;AAAwBC,KACtHsB,eAAAA,GAAkBD,oBADoGrB,GAC7EoB,eAD6EpB"}