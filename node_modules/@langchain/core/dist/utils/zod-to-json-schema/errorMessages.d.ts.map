{"version":3,"file":"errorMessages.d.ts","names":["JsonSchema7TypeUnion","Refs","ErrorMessages","T","OmitProperties","Omit","Partial","addErrorMessage","setResponseValueAndErrors","Json7Type","Key"],"sources":["../../../src/utils/zod-to-json-schema/errorMessages.d.ts"],"sourcesContent":["import { JsonSchema7TypeUnion } from \"./parseTypes.js\";\nimport { Refs } from \"./Refs.js\";\nexport type ErrorMessages<T extends JsonSchema7TypeUnion | {\n    format: string;\n} | {\n    pattern: string;\n}, OmitProperties extends string = \"\"> = Partial<Omit<{\n    [key in keyof T]: string;\n}, OmitProperties | \"type\" | \"errorMessages\">>;\nexport declare function addErrorMessage<T extends {\n    errorMessage?: ErrorMessages<any>;\n}>(res: T, key: keyof T, errorMessage: string | undefined, refs: Refs): void;\nexport declare function setResponseValueAndErrors<Json7Type extends JsonSchema7TypeUnion & {\n    errorMessage?: ErrorMessages<Json7Type>;\n}, Key extends keyof Omit<Json7Type, \"errorMessage\">>(res: Json7Type, key: Key, value: Json7Type[Key], errorMessage: string | undefined, refs: Refs): void;\n"],"mappings":";;;KAEYE,wBAAwBF;EAAxBE,MAAAA,EAAAA,MAAAA;CAAa,GAAA;EAAA,OAAWF,EAAAA,MAAAA;CAAoB,EAAA,uBAKtCG,MAAAA,GAAAA,EAAAA,CAAAA,GADuBG,OACvBH,CAD+BE,IAC/BF,CAAAA,UACfC,MADeD,CACfC,GAAAA,MAAAA,EAAc,EAAdA,cAF8CC,GAAAA,MAAAA,GAAAA,eAAAA,CAAAA,CAAAA"}