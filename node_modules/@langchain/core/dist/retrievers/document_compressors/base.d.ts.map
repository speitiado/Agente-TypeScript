{"version":3,"file":"base.d.ts","names":["Callbacks","DocumentInterface","BaseDocumentCompressor","Promise"],"sources":["../../../src/retrievers/document_compressors/base.d.ts"],"sourcesContent":["import { Callbacks } from \"../../callbacks/manager.js\";\nimport { DocumentInterface } from \"../../documents/document.js\";\n/**\n * Base Document Compression class. All compressors should extend this class.\n */\nexport declare abstract class BaseDocumentCompressor {\n    /**\n     * Abstract method that must be implemented by any class that extends\n     * `BaseDocumentCompressor`. This method takes an array of `Document`\n     * objects and a query string as parameters and returns a Promise that\n     * resolves with an array of compressed `Document` objects.\n     * @param documents An array of `Document` objects to be compressed.\n     * @param query A query string.\n     * @returns A Promise that resolves with an array of compressed `Document` objects.\n     */\n    abstract compressDocuments(documents: DocumentInterface[], query: string, callbacks?: Callbacks): Promise<DocumentInterface[]>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isBaseDocumentCompressor(x: any): x is BaseDocumentCompressor;\n}\n"],"mappings":";;;;;;;AAKA;AAAoD,uBAAtBE,sBAAAA,CAAsB;EAAA;;;;;AAYoB;;;;wCAF9BD,gDAAgDD,YAAYG,QAAQF;;gDAE5DC"}