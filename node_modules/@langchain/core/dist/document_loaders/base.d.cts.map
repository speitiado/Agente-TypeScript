{"version":3,"file":"base.d.cts","names":["Document","DocumentLoader","Promise","BaseDocumentLoader"],"sources":["../../src/document_loaders/base.d.ts"],"sourcesContent":["import { Document } from \"../documents/document.js\";\n/**\n * Interface that defines the methods for loading and splitting documents.\n */\nexport interface DocumentLoader {\n    load(): Promise<Document[]>;\n}\n/**\n * Abstract class that provides a default implementation for the\n * loadAndSplit() method from the DocumentLoader interface. The load()\n * method is left abstract and needs to be implemented by subclasses.\n */\nexport declare abstract class BaseDocumentLoader implements DocumentLoader {\n    /**\n     * Loads the documents.\n     * @returns A Promise that resolves with an array of Document instances.\n     */\n    abstract load(): Promise<Document[]>;\n}\n"],"mappings":";;;;;;AAIA;AAA+B,UAAdC,cAAAA,CAAc;EAAA,IACXD,EAAAA,EAARE,OAAQF,CAAAA,QAAAA,EAAAA,CAAAA;;AAAD;AAOnB;;;;AAA4DC,uBAA9BE,kBAAAA,YAA8BF,cAAAA,CAAAA;EAAc;;;;mBAKrDC,QAAQF"}