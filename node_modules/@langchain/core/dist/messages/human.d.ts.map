{"version":3,"file":"human.d.ts","names":["BaseMessage","BaseMessageChunk","BaseMessageFields","$InferMessageContent","MessageStructure","HumanMessageFields","TStructure","HumanMessage","HumanMessageChunk","isHumanMessage","isHumanMessageChunk"],"sources":["../../src/messages/human.d.ts"],"sourcesContent":["import { BaseMessage, BaseMessageChunk, type BaseMessageFields } from \"./base.js\";\nimport type { $InferMessageContent, MessageStructure } from \"./message.js\";\nexport interface HumanMessageFields<TStructure extends MessageStructure = MessageStructure> extends BaseMessageFields<TStructure, \"human\"> {\n}\n/**\n * Represents a human message in a conversation.\n */\nexport declare class HumanMessage<TStructure extends MessageStructure = MessageStructure> extends BaseMessage<TStructure, \"human\"> {\n    static lc_name(): string;\n    readonly type: \"human\";\n    constructor(fields: $InferMessageContent<TStructure, \"human\"> | HumanMessageFields<TStructure>);\n    static isInstance(obj: unknown): obj is HumanMessage;\n}\n/**\n * Represents a chunk of a human message, which can be concatenated with\n * other human message chunks.\n */\nexport declare class HumanMessageChunk<TStructure extends MessageStructure = MessageStructure> extends BaseMessageChunk<TStructure, \"human\"> {\n    static lc_name(): string;\n    readonly type: \"human\";\n    constructor(fields: $InferMessageContent<TStructure, \"human\"> | HumanMessageFields<TStructure>);\n    concat(chunk: HumanMessageChunk<TStructure>): this;\n    static isInstance(obj: unknown): obj is HumanMessageChunk;\n}\n/**\n * @deprecated Use {@link HumanMessage.isInstance} instead\n */\nexport declare function isHumanMessage<TStructure extends MessageStructure>(x: BaseMessage): x is HumanMessage<TStructure>;\n/**\n * @deprecated Use {@link HumanMessageChunk.isInstance} instead\n */\nexport declare function isHumanMessageChunk<TStructure extends MessageStructure>(x: BaseMessageChunk): x is HumanMessageChunk<TStructure>;\n"],"mappings":";;;;UAEiBK,sCAAsCD,mBAAmBA,0BAA0BF,kBAAkBI;AAAtH;;;AAA0EF,cAKrDG,YALqDH,CAAAA,mBAKrBA,gBALqBA,GAKFA,gBALEA,CAAAA,SAKwBJ,WALxBI,CAKoCE,UALpCF,EAAAA,OAAAA,CAAAA,CAAAA;EAAgB,OAA4BE,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAU,SAA5BJ,IAAAA,EAAAA,OAAAA;EAAiB,WAAA,CAAA,MAAA,EAQ7FC,oBAR6F,CAQxEG,UARwE,EAAA,OAAA,CAAA,GAQjDD,kBARiD,CAQ9BC,UAR8B,CAAA;EAKhGC,OAAAA,UAAY,CAAA,GAAA,EAAA,OAAA,CAAA,EAAA,GAAA,IAIWA,YAJX;;;;;;AAGTJ,cAOHK,iBAPGL,CAAAA,mBAOkCC,gBAPlCD,GAOqDC,gBAPrDD,CAAAA,SAO+EF,gBAP/EE,CAOgGG,UAPhGH,EAAAA,OAAAA,CAAAA,CAAAA;EAAoB,OAA2CG,OAAAA,CAAAA,CAAAA,EAAAA,MAAAA;EAAU,SAA7BD,IAAAA,EAAAA,OAAAA;EAAkB,WAC1CE,CAAAA,MAAAA,EASpBJ,oBAToBI,CASCD,UATDC,EAAAA,OAAAA,CAAAA,GASwBF,kBATxBE,CAS2CD,UAT3CC,CAAAA;EAAY,MAJ0CP,CAAAA,KAAAA,EAchFQ,iBAdgFR,CAc9DM,UAd8DN,CAAAA,CAAAA,EAAAA,IAAAA;EAAW,OAAA,UAAA,CAAA,GAAA,EAAA,OAAA,CAAA,EAAA,GAAA,IAejEQ,iBAfiE;AAU7G;;;;AAAwHF,iBAUhGG,cAVgGH,CAAAA,mBAU9DF,gBAV8DE,CAAAA,CAAAA,CAAAA,EAUzCN,WAVyCM,CAAAA,EAAAA,CAAAA,IAUtBC,YAVsBD,CAUTA,UAVSA,CAAAA;;;;AAGpDD,iBAW5CK,mBAX4CL,CAAAA,mBAWLD,gBAXKC,CAAAA,CAAAA,CAAAA,EAWgBJ,gBAXhBI,CAAAA,EAAAA,CAAAA,IAWwCG,iBAXxCH,CAW0DC,UAX1DD,CAAAA"}