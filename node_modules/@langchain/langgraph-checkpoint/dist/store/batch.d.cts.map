{"version":3,"file":"batch.d.cts","names":["BaseStore","Item","Operation","OperationResults","AsyncBatchedStore","Op","Promise","Record","Map"],"sources":["../../src/store/batch.d.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { BaseStore, type Item, type Operation, OperationResults } from \"./base.js\";\nexport declare class AsyncBatchedStore extends BaseStore {\n    lg_name: string;\n    protected store: BaseStore;\n    private queue;\n    private nextKey;\n    private running;\n    private processingTask;\n    constructor(store: BaseStore);\n    get isRunning(): boolean;\n    /**\n     * @ignore\n     * Batch is not implemented here as we're only extending `BaseStore`\n     * to allow it to be passed where `BaseStore` is expected, and implement\n     * the convenience methods (get, search, put, delete).\n     */\n    batch<Op extends Operation[]>(_operations: Op): Promise<OperationResults<Op>>;\n    get(namespace: string[], key: string): Promise<Item | null>;\n    search(namespacePrefix: string[], options?: {\n        filter?: Record<string, any>;\n        limit?: number;\n        offset?: number;\n        query?: string;\n    }): Promise<Item[]>;\n    put(namespace: string[], key: string, value: Record<string, any>): Promise<void>;\n    delete(namespace: string[], key: string): Promise<void>;\n    start(): void;\n    stop(): Promise<void>;\n    private enqueueOperation;\n    private processBatchQueue;\n    // AsyncBatchedStore is internal and gets passed as args into traced tasks\n    // some BaseStores contain circular references so just serialize without it\n    // as this causes warnings when tracing with LangSmith.\n    toJSON(): {\n        queue: Map<number, {\n            operation: Operation;\n            resolve: (value: any) => void;\n            reject: (reason?: any) => void;\n        }>;\n        nextKey: number;\n        running: boolean;\n        store: string;\n    };\n}\n"],"mappings":";;;cAEqBI,iBAAAA,SAA0BJ,SAAAA;EAA1BI,OAAAA,EAAAA,MAAAA;EAAiB,UAAA,KAAA,EAEjBJ,SAFiB;UAEjBA,KAAAA;UAKEA,OAAAA;UAQFE,OAAAA;UAA0BG,cAAAA;aAA8BA,CAAAA,KAAAA,EARtDL,SAQsDK;MAAjBF,SAAAA,CAAAA,CAAAA,EAAAA,OAAAA;;;;;;;OAQXI,CAAAA,WAR5BL,SAQ4BK,EAAAA,CAAAA,CAAAA,WAAAA,EARFF,EAQEE,CAAAA,EARGD,OAQHC,CARWJ,gBAQXI,CAR4BF,EAQ5BE,CAAAA,CAAAA;KAAsBD,CAAAA,SAAAA,EAAAA,MAAAA,EAAAA,EAAAA,GAAAA,EAAAA,MAAAA,CAAAA,EAP5BA,OAO4BA,CAPpBL,IAOoBK,GAAAA,IAAAA,CAAAA;QACzBA,CAAAA,eAAAA,EAAAA,MAAAA,EAAAA,EAAAA,QAAAA,EAAAA;IAElCA,MAAAA,CAAAA,EARKC,MAQLD,CAAAA,MAAAA,EAAAA,GAAAA,CAAAA;IAQWJ,KAAAA,CAAAA,EAAAA,MAAAA;IADRM,MAAAA,CAAAA,EAAAA,MAAAA;IAjCgCR,KAAAA,CAAAA,EAAAA,MAAAA;MAsBvCM,QAAQL;+CACiCM,sBAAsBD;4CACzBA;;UAElCA;;;;;;;WAOGE;iBACQN"}