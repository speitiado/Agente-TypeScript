{"version":3,"file":"types.d.ts","names":["TASKS","ERROR","SCHEDULED","INTERRUPT","RESUME","ChannelProtocol","ValueType","UpdateType","CheckpointType","SendProtocol"],"sources":["../../src/serde/types.d.ts"],"sourcesContent":["export declare const TASKS = \"__pregel_tasks\";\nexport declare const ERROR = \"__error__\";\nexport declare const SCHEDULED = \"__scheduled__\";\nexport declare const INTERRUPT = \"__interrupt__\";\nexport declare const RESUME = \"__resume__\";\n// Mirrors BaseChannel in \"@langchain/langgraph\"\nexport interface ChannelProtocol<ValueType = unknown, UpdateType = unknown, CheckpointType = unknown> {\n    ValueType: ValueType;\n    UpdateType: UpdateType;\n    /**\n     * The name of the channel.\n     */\n    lc_graph_name: string;\n    /**\n     * Return a new identical channel, optionally initialized from a checkpoint.\n     * Can be thought of as a \"restoration\" from a checkpoint which is a \"snapshot\" of the channel's state.\n     *\n     * @param {CheckpointType | undefined} checkpoint\n     * @returns {this}\n     */\n    fromCheckpoint(checkpoint?: CheckpointType): this;\n    /**\n     * Update the channel's value with the given sequence of updates.\n     * The order of the updates in the sequence is arbitrary.\n     *\n     * @throws {InvalidUpdateError} if the sequence of updates is invalid.\n     * @param {Array<UpdateType>} values\n     * @returns {void}\n     */\n    update(values: UpdateType[]): void;\n    /**\n     * Return the current value of the channel.\n     *\n     * @throws {EmptyChannelError} if the channel is empty (never updated yet).\n     * @returns {ValueType}\n     */\n    get(): ValueType;\n    /**\n     * Return a string representation of the channel's current state.\n     *\n     * @throws {EmptyChannelError} if the channel is empty (never updated yet), or doesn't support checkpoints.\n     * @returns {CheckpointType | undefined}\n     */\n    checkpoint(): CheckpointType | undefined;\n}\n// Mirrors SendInterface in \"@langchain/langgraph\"\nexport interface SendProtocol {\n    node: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    args: any;\n}\n"],"mappings":";cAAqBA,KAAAA;AAAAA,cACAC,KAAAA,GADK,WAAA;AACLA,cACAC,SAAAA,GADK,eAAA;AACLA,cACAC,SAAAA,GADS,eAAA;AACTA,cACAC,MAAAA,GADS,YAAA;AAC9B;AAEiBC,UAAAA,eAAe,CAAA,YAAA,OAAA,EAAA,aAAA,OAAA,EAAA,iBAAA,OAAA,CAAA,CAAA;EAAA,SAAA,EACjBC,SADiB;YACjBA,EACCC,UADDD;;;;eA6BJA,EAAAA,MAAAA;;;AAUX;;;;;8BA1BgCE;;;;;;;;;iBASbD;;;;;;;SAORD;;;;;;;gBAOOE;;;UAGDC,YAAAA"}