{"version":3,"file":"completions.d.ts","names":["OpenAI","OpenAIClient","CallbackManagerForLLMRun","AIMessageChunk","BaseMessage","ChatMessageChunk","FunctionMessageChunk","HumanMessageChunk","SystemMessageChunk","ToolMessageChunk","ChatGenerationChunk","ChatResult","BaseChatOpenAICallOptions","BaseChatOpenAI","ChatOpenAICompletionsCallOptions","ChatCompletionsInvocationParams","Chat","Completions","ChatCompletionCreateParams","Omit","ChatOpenAICompletions","CallOptions","Promise","AsyncGenerator","ChatCompletionCreateParamsStreaming","RequestOptions","ChatCompletionChunk","AsyncIterable","ChatCompletionCreateParamsNonStreaming","ChatCompletion","ChatCompletionMessage","Record","ChatCompletionRole","_langchain_core_messages1","MessageStructure"],"sources":["../../src/chat_models/completions.d.ts"],"sourcesContent":["import { OpenAI as OpenAIClient } from \"openai\";\nimport { CallbackManagerForLLMRun } from \"@langchain/core/callbacks/manager\";\nimport { AIMessageChunk, type BaseMessage, ChatMessageChunk, FunctionMessageChunk, HumanMessageChunk, SystemMessageChunk, ToolMessageChunk } from \"@langchain/core/messages\";\nimport { ChatGenerationChunk, type ChatResult } from \"@langchain/core/outputs\";\nimport { BaseChatOpenAICallOptions } from \"./base.js\";\nimport { BaseChatOpenAI } from \"./base.js\";\nexport interface ChatOpenAICompletionsCallOptions extends BaseChatOpenAICallOptions {\n}\ntype ChatCompletionsInvocationParams = Omit<OpenAIClient.Chat.Completions.ChatCompletionCreateParams, \"messages\">;\n/**\n * OpenAI Completions API implementation.\n * @internal\n */\nexport declare class ChatOpenAICompletions<CallOptions extends ChatOpenAICompletionsCallOptions = ChatOpenAICompletionsCallOptions> extends BaseChatOpenAI<CallOptions> {\n    /** @internal */\n    invocationParams(options?: this[\"ParsedCallOptions\"], extra?: {\n        streaming?: boolean;\n    }): ChatCompletionsInvocationParams;\n    _generate(messages: BaseMessage[], options: this[\"ParsedCallOptions\"], runManager?: CallbackManagerForLLMRun): Promise<ChatResult>;\n    _streamResponseChunks(messages: BaseMessage[], options: this[\"ParsedCallOptions\"], runManager?: CallbackManagerForLLMRun): AsyncGenerator<ChatGenerationChunk>;\n    completionWithRetry(request: OpenAIClient.Chat.ChatCompletionCreateParamsStreaming, requestOptions?: OpenAIClient.RequestOptions): Promise<AsyncIterable<OpenAIClient.Chat.Completions.ChatCompletionChunk>>;\n    completionWithRetry(request: OpenAIClient.Chat.ChatCompletionCreateParamsNonStreaming, requestOptions?: OpenAIClient.RequestOptions): Promise<OpenAIClient.Chat.Completions.ChatCompletion>;\n    /** @internal */\n    protected _convertCompletionsMessageToBaseMessage(message: OpenAIClient.Chat.Completions.ChatCompletionMessage, rawResponse: OpenAIClient.Chat.Completions.ChatCompletion): BaseMessage;\n    /** @internal */\n    protected _convertCompletionsDeltaToBaseMessageChunk(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    delta: Record<string, any>, rawResponse: OpenAIClient.Chat.Completions.ChatCompletionChunk, defaultRole?: OpenAIClient.Chat.ChatCompletionRole): AIMessageChunk<import(\"@langchain/core/messages\").MessageStructure> | ChatMessageChunk<import(\"@langchain/core/messages\").MessageStructure> | FunctionMessageChunk<import(\"@langchain/core/messages\").MessageStructure> | HumanMessageChunk<import(\"@langchain/core/messages\").MessageStructure> | SystemMessageChunk<import(\"@langchain/core/messages\").MessageStructure> | ToolMessageChunk<import(\"@langchain/core/messages\").MessageStructure>;\n}\nexport {};\n"],"mappings":";;;;;;;;UAMiBc,gCAAAA,SAAyCF;AAA1D,KAEKG,+BAAAA,GAAkCI,IAFU,CAELlB,QAAAA,CAAae,IAAAA,CAAKC,WAAAA,CAAYC,0BAFS,EAAA,UAAA,CAAA;AAClF;;;;AAC0C,cAKtBE,qBALsB,CAAA,oBAKoBN,gCALpB,GAKuDA,gCALvD,CAAA,SAKiGD,cALjG,CAKgHQ,WALhH,CAAA,CAAA;EAKtBD;EAAqB,gBAAA,CAAA,OAAA,CAAA,EAAA,IAAA,CAAA,mBAAA,CAAA,EAAA,KAAqD,CAArD,EAAA;IAAqBN,SAAAA,CAAAA,EAAAA,OAAAA;EAAgC,CAAA,CAAA,EAIvFC,+BAJ0FD;EAAgC,SAAyBO,CAAAA,QAAAA,EAKnIjB,WALmIiB,EAAAA,EAAAA,OAAAA,EAAAA,IAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,UAAAA,CAAAA,EAKnEnB,wBALmEmB,CAAAA,EAKxCC,OALwCD,CAKhCV,UALgCU,CAAAA;EAAW,qBAI9JN,CAAAA,QAAAA,EAE4BX,WAF5BW,EAAAA,EAAAA,OAAAA,EAAAA,IAAAA,CAAAA,mBAAAA,CAAAA,EAAAA,UAAAA,CAAAA,EAE4Fb,wBAF5Fa,CAAAA,EAEuHQ,cAFvHR,CAEsIL,mBAFtIK,CAAAA;EAA+B,mBACfX,CAAAA,OAAAA,EAESH,QAAAA,CAAae,IAAAA,CAAKQ,mCAF3BpB,EAAAA,cAAAA,CAAAA,EAEiFH,QAAAA,CAAawB,cAF9FrB,CAAAA,EAE+GkB,OAF/GlB,CAEuHuB,aAFvHvB,CAEqIH,QAAAA,CAAae,IAAAA,CAAKC,WAAAA,CAAYS,mBAFnKtB,CAAAA,CAAAA;EAAW,mBAAqDF,CAAAA,OAAAA,EAGvDD,QAAAA,CAAae,IAAAA,CAAKY,sCAHqC1B,EAAAA,cAAAA,CAAAA,EAGoBD,QAAAA,CAAawB,cAHjCvB,CAAAA,EAGkDoB,OAHlDpB,CAG0DD,QAAAA,CAAae,IAAAA,CAAKC,WAAAA,CAAYY,cAHxF3B,CAAAA;EAAwB;EAAqB,UAAlBoB,uCAAAA,CAAAA,OAAAA,EAKpDrB,QAAAA,CAAae,IAAAA,CAAKC,WAAAA,CAAYa,qBALsBR,EAAAA,WAAAA,EAKcrB,QAAAA,CAAae,IAAAA,CAAKC,WAAAA,CAAYY,cAL5CP,CAAAA,EAK6DlB,WAL7DkB;EAAO;EAC3E,UAAqDpB,0CAAAA;EAAwB;EAAqC,KAAlCqB,EAQpHQ,MARoHR,CAAAA,MAAAA,EAAAA,GAAAA,CAAAA,EAAAA,WAAAA,EAQlFtB,QAAAA,CAAae,IAAAA,CAAKC,WAAAA,CAAYS,mBARoDH,EAAAA,WAAAA,CAAAA,EAQjBtB,QAAAA,CAAae,IAAAA,CAAKgB,kBARDT,CAAAA,EAQsBpB,cARtBoB,CAQmBU,yBAAAA,CAAqDC,gBAAAA,CARxEX,GAQ4FlB,gBAR5FkB,CAQoCU,yBAAAA,CAA4GC,gBAAAA,CARhJX,GAQoKjB,oBARpKiB,CAQ4GU,yBAAAA,CAAgHC,gBAAAA,CAR5NX,GAQgPhB,iBARhPgB,CAQwLU,yBAAAA,CAA6GC,gBAAAA,CARrSX,GAQyTf,kBARzTe,CAQiQU,yBAAAA,CAA8GC,gBAAAA,CAR/WX,GAQmYd,gBARnYc,CAQ2UU,yBAAAA,CAA4GC,gBAAAA,CARvbX"}